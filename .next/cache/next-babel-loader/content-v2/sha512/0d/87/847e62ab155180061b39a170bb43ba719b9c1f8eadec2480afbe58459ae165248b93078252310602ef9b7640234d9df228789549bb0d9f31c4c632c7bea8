{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/meddou/projects/perso/meddou.com/src/component/project/Project.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from '../../Image';\nimport './Project.css';\n\nvar Project = /*#__PURE__*/function (_Component) {\n  _inherits(Project, _Component);\n\n  var _super = _createSuper(Project);\n\n  function Project() {\n    _classCallCheck(this, Project);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Project, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          backgroundColor = _this$props.backgroundColor,\n          backgroundImage = _this$props.backgroundImage,\n          logo = _this$props.logo,\n          name = _this$props.name,\n          isHoverable = _this$props.isHoverable,\n          fullSize = _this$props.fullSize;\n      var isWhite = backgroundColor ? Project.isWhite(backgroundColor.slice(1)) : false;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded project-container \".concat(fullSize ? 'full-size' : ''),\n          style: {\n            backgroundColor: backgroundColor,\n            backgroundImage: backgroundImage\n          },\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            alt: name,\n            className: \"project-image\",\n            src: \"/images-webp/project/\".concat(logo, \"-logo.png\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), isHoverable !== false && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"project-overlay\",\n            style: {\n              backgroundColor: backgroundColor,\n              backgroundImage: backgroundImage,\n              color: isWhite ? 'black' : 'white'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this);\n    }\n  }], [{\n    key: \"isWhite\",\n    value: function isWhite(c) {\n      var rgb = parseInt(c, 16); // convert rrggbb to decimal\n\n      var r = rgb >> 16 & 0xff; // extract red\n\n      var g = rgb >> 8 & 0xff; // extract green\n\n      var b = rgb >> 0 & 0xff; // extract blue\n\n      var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\n\n      return luma >= 220;\n    }\n  }]);\n\n  return Project;\n}(Component);\n\nexport default Project;","map":{"version":3,"sources":["/home/meddou/projects/perso/meddou.com/src/component/project/Project.jsx"],"names":["React","Component","Image","Project","props","backgroundColor","backgroundImage","logo","name","isHoverable","fullSize","isWhite","slice","color","c","rgb","parseInt","r","g","b","luma"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,eAAP;;IAEMC,O;;;;;;;;;;;;;6BAYK;AAAA,wBAGH,KAAKC,KAHF;AAAA,UAELC,eAFK,eAELA,eAFK;AAAA,UAEYC,eAFZ,eAEYA,eAFZ;AAAA,UAE6BC,IAF7B,eAE6BA,IAF7B;AAAA,UAEmCC,IAFnC,eAEmCA,IAFnC;AAAA,UAEyCC,WAFzC,eAEyCA,WAFzC;AAAA,UAEsDC,QAFtD,eAEsDA,QAFtD;AAIP,UAAMC,OAAO,GAAGN,eAAe,GAAGF,OAAO,CAACQ,OAAR,CAAgBN,eAAe,CAACO,KAAhB,CAAsB,CAAtB,CAAhB,CAAH,GAA+C,KAA9E;AAEA,0BACE;AAAA,+BACE;AAAK,UAAA,SAAS,sCAA+BF,QAAQ,GAAG,WAAH,GAAiB,EAAxD,CAAd;AAA4E,UAAA,KAAK,EAAE;AAAEL,YAAAA,eAAe,EAAfA,eAAF;AAAmBC,YAAAA,eAAe,EAAfA;AAAnB,WAAnF;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,GAAG,EAAEE,IAAZ;AAAkB,YAAA,SAAS,EAAC,eAA5B;AAA4C,YAAA,GAAG,iCAA0BD,IAA1B;AAA/C;AAAA;AAAA;AAAA;AAAA,kBADF,EAEIE,WAAW,KAAK,KAAhB,iBAEA;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAkC,YAAA,KAAK,EAAE;AAAEJ,cAAAA,eAAe,EAAfA,eAAF;AAAmBC,cAAAA,eAAe,EAAfA,eAAnB;AAAoCO,cAAAA,KAAK,EAAEF,OAAO,GAAG,OAAH,GAAa;AAA/D,aAAzC;AAAA,mCACE;AAAA,wBAAOH;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAaD;;;4BA9BcM,C,EAAG;AAChB,UAAMC,GAAG,GAAGC,QAAQ,CAACF,CAAD,EAAI,EAAJ,CAApB,CADgB,CACa;;AAC7B,UAAMG,CAAC,GAAIF,GAAG,IAAI,EAAR,GAAc,IAAxB,CAFgB,CAEc;;AAC9B,UAAMG,CAAC,GAAIH,GAAG,IAAI,CAAR,GAAa,IAAvB,CAHgB,CAGa;;AAC7B,UAAMI,CAAC,GAAIJ,GAAG,IAAI,CAAR,GAAa,IAAvB,CAJgB,CAIa;;AAE7B,UAAMK,IAAI,GAAG,SAASH,CAAT,GAAa,SAASC,CAAtB,GAA0B,SAASC,CAAhD,CANgB,CAMmC;;AAEnD,aAAOC,IAAI,IAAI,GAAf;AACD;;;;EAVmBnB,S;;AAkCtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Image from '../../Image'\r\n\r\nimport './Project.css'\r\n\r\nclass Project extends Component {\r\n  static isWhite(c) {\r\n    const rgb = parseInt(c, 16); // convert rrggbb to decimal\r\n    const r = (rgb >> 16) & 0xff; // extract red\r\n    const g = (rgb >> 8) & 0xff; // extract green\r\n    const b = (rgb >> 0) & 0xff; // extract blue\r\n\r\n    const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\r\n\r\n    return luma >= 220\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      backgroundColor, backgroundImage, logo, name, isHoverable, fullSize,\r\n    } = this.props\r\n    const isWhite = backgroundColor ? Project.isWhite(backgroundColor.slice(1)) : false\r\n\r\n    return (\r\n      <span>\r\n        <div className={`rounded project-container ${fullSize ? 'full-size' : ''}`} style={{ backgroundColor, backgroundImage }}>\r\n          <Image alt={name} className=\"project-image\" src={`/images-webp/project/${logo}-logo.png`} />\r\n          { isHoverable !== false\r\n            && (\r\n            <span className=\"project-overlay\" style={{ backgroundColor, backgroundImage, color: isWhite ? 'black' : 'white' }}>\r\n              <span>{name}</span>\r\n            </span>\r\n            )}\r\n        </div>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Project\r\n"]},"metadata":{},"sourceType":"module"}