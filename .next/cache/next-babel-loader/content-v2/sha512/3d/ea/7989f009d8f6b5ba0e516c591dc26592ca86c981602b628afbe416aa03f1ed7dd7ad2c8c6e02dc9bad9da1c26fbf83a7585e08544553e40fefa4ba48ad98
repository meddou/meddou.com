{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/meddou/projects/perso/meddou.com/src/pages/Project.jsx\";\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport Slider from 'react-slick';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport BasicPage from './BasicPage';\nimport Row from '../layout/row/Row';\nimport Item from '../layout/item/Item';\nimport Project from '../component/project/Project';\nimport ProjectOverlay from '../component/project/ProjectOverlay';\nimport Skill from '../component/skill/Skill';\nimport ScrollableRow from '../component/scrollable-row/ScrollableRow';\nimport Title from '../component/title/Title';\nimport Description from '../component/description/Description';\nimport RectScroller from '../component/rect-scroller/RectScroller';\nimport SkillService from '../services/Skill';\nimport ProjectService from '../services/Project';\nimport Zoomable from '../component/zoomable/Zoomable';\nimport './Project.css';\nimport './BasicPage.css';\nimport './slick.min.css';\n\nclass ProjectPage extends BasicPage {\n  constructor(props) {\n    super(props);\n    const name = props.router.query.project;\n    this.timeoutId = undefined;\n    this.sliderRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      project: ProjectService.getFromName(name),\n      activeSlide: 0\n    };\n    this.isSliderSliding = false;\n    this.goToWork = this.goToWork.bind(this);\n    this.onSwipe = this.onSwipe.bind(this);\n  }\n\n  componentDidMount() {\n    this.container = window;\n    this.setState({\n      transitionVisible: !!window.projectListToProjectTransition\n    }, () => {\n      this.timeoutId = setTimeout(() => {\n        this.timeoutId = undefined;\n        this.setState({\n          transitionVisible: false\n        });\n      }, 500);\n    });\n    this.container.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'instant'\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n\n    this.container.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'instant'\n    });\n    window.projectListToProjectTransition = undefined;\n  }\n\n  goToWork(e) {\n    e.preventDefault();\n    this.props.router.push('/work', undefined, {\n      shallow: true\n    });\n  }\n\n  setActiveSlide(slide, e) {\n    e.preventDefault();\n\n    if (this.state.activeSlide !== slide && !this.isSliderSliding) {\n      this.isSliderSliding = true;\n      window.setTimeout(() => {\n        this.isSliderSliding = false;\n      }, 500);\n      this.setState({\n        activeSlide: slide\n      });\n      this.sliderRef.current.slickGoTo(slide);\n    }\n  }\n\n  onSwipe(direction) {\n    this.setState({\n      activeSlide: direction === 'left' ? 1 : 0\n    });\n  }\n\n  static getCloseButton() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-close-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderContent() {\n    return this.state.project ? this.renderContentWithProject() : this.renderContentWithoutProject();\n  }\n\n  renderContentWithoutProject() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  renderContentWithProject() {\n    const tabs = [{\n      test: this.state.project.description_project || '',\n      name: 'Le projet',\n      content: this.state.project.description_project || ''\n    }, {\n      test: this.state.project.description_mission,\n      name: 'La mission',\n      content: this.state.project.description_mission\n    }, {\n      test: this.state.project.start,\n      name: 'La durÃ©e',\n      content: `${moment(this.state.project.start).locale('fr').format('LL')} - ${this.state.project.end ? moment(this.state.project.end).locale('fr').format('LL') : 'Actuel'}`\n    }].filter(t => t.test);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"project-page-super-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-page-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"project-page-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-description-container\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"project-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'inline-block',\n                  position: 'relative'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Project, {\n                  backgroundColor: this.state.project.backgroundColor,\n                  backgroundImage: this.state.project.backgroundImage,\n                  name: this.state.project.name,\n                  logo: this.state.project.logo,\n                  isHoverable: false,\n                  fullSize: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"back-button-container\",\n                  onClick: this.goToWork,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"\\u2039\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 99\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"project-title-container\",\n                children: [/*#__PURE__*/_jsxDEV(Title, {\n                  text: this.state.project.name,\n                  noMargin: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), this.state.project.url && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"view-project-anchor link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: this.state.project.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: \"Voir le projet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ScrollableRow, {\n                  className: \"project-skills-container\",\n                  step: 164 / 2.5,\n                  children: this.state.project.languages.map(SkillService.getFromName).map(skill => /*#__PURE__*/_jsxDEV(Item, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      href: `/work?skill=${encodeURIComponent(skill.name)}`,\n                      children: /*#__PURE__*/_jsxDEV(Skill, {\n                        name: skill.name,\n                        backgroundColor: skill.backgroundColor,\n                        backgroundImage: skill.backgroundImage,\n                        experience: skill.experience,\n                        logo: skill.logo,\n                        isLittle: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 27\n                    }, this)\n                  }, skill.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-scroller-container bp-small\",\n              children: /*#__PURE__*/_jsxDEV(RectScroller, {\n                children: this.state.project.images.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `/images-webp/project/${image}`,\n                  style: {\n                    backgroundColor: this.state.project.backgroundColor\n                  },\n                  alt: `${this.state.project.name} ${image}`\n                }, image, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-description-header\",\n              children: tabs.map((tab, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: this.state.activeSlide === idx ? 'isActive' : undefined,\n                onClick: e => this.setActiveSlide(idx, e),\n                children: tab.name\n              }, tab.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-description-content\",\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                settings: {\n                  dots: false,\n                  arrows: false,\n                  infinite: false\n                },\n                ref: this.sliderRef,\n                onSwipe: this.onSwipe,\n                children: tabs.map(tab => /*#__PURE__*/_jsxDEV(Description, {\n                  text: tab.content,\n                  noMargin: true\n                }, `${tab.name}|content`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 38\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-scroller-container bp-large\",\n            children: /*#__PURE__*/_jsxDEV(RectScroller, {\n              children: this.state.project.images.map(image => /*#__PURE__*/_jsxDEV(Zoomable, {\n                closeButton: ProjectPage.getCloseButton(),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `/images-webp/project/${image}`,\n                  alt: `${this.state.project.name} ${image}`,\n                  style: {\n                    backgroundColor: this.state.project.backgroundColor,\n                    height: '100%',\n                    width: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this)\n              }, image, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), this.state.transitionVisible && /*#__PURE__*/_jsxDEV(ProjectOverlay, {\n            outTransition: true,\n            backgroundColor: this.state.project.backgroundColor,\n            logo: this.state.project.logo,\n            isVisible: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withRouter(ProjectPage);","map":{"version":3,"sources":["/home/meddou/projects/perso/meddou.com/src/pages/Project.jsx"],"names":["React","withRouter","Link","Slider","moment","BasicPage","Row","Item","Project","ProjectOverlay","Skill","ScrollableRow","Title","Description","RectScroller","SkillService","ProjectService","Zoomable","ProjectPage","constructor","props","name","router","query","project","timeoutId","undefined","sliderRef","createRef","state","getFromName","activeSlide","isSliderSliding","goToWork","bind","onSwipe","componentDidMount","container","window","setState","transitionVisible","projectListToProjectTransition","setTimeout","scroll","top","left","behavior","componentWillUnmount","clearTimeout","e","preventDefault","push","shallow","setActiveSlide","slide","current","slickGoTo","direction","getCloseButton","renderContent","renderContentWithProject","renderContentWithoutProject","tabs","test","description_project","content","description_mission","start","locale","format","end","filter","t","display","position","backgroundColor","backgroundImage","logo","url","languages","map","skill","encodeURIComponent","experience","images","image","tab","idx","dots","arrows","infinite","height","width"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'next/router'\r\n\r\nimport Link from 'next/link'\r\nimport Slider from 'react-slick'\r\nimport moment from 'moment'\r\nimport 'moment/locale/fr';\r\n\r\nimport BasicPage from './BasicPage'\r\n\r\nimport Row from '../layout/row/Row'\r\nimport Item from '../layout/item/Item'\r\n\r\nimport Project from '../component/project/Project'\r\nimport ProjectOverlay from '../component/project/ProjectOverlay'\r\nimport Skill from '../component/skill/Skill'\r\nimport ScrollableRow from '../component/scrollable-row/ScrollableRow'\r\nimport Title from '../component/title/Title'\r\nimport Description from '../component/description/Description'\r\nimport RectScroller from '../component/rect-scroller/RectScroller'\r\n\r\nimport SkillService from '../services/Skill'\r\nimport ProjectService from '../services/Project'\r\n\r\nimport Zoomable from '../component/zoomable/Zoomable'\r\n\r\nimport './Project.css'\r\nimport './BasicPage.css'\r\nimport './slick.min.css'\r\n\r\nclass ProjectPage extends BasicPage {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const name = props.router.query.project\r\n\r\n    this.timeoutId = undefined\r\n\r\n    this.sliderRef = React.createRef()\r\n\r\n    this.state = {\r\n      project: ProjectService.getFromName(name),\r\n      activeSlide: 0,\r\n    }\r\n    this.isSliderSliding = false\r\n\r\n    this.goToWork = this.goToWork.bind(this)\r\n    this.onSwipe = this.onSwipe.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.container = window\r\n\r\n    this.setState({\r\n      transitionVisible: !!window.projectListToProjectTransition,\r\n    }, () => {\r\n      this.timeoutId = setTimeout(() => {\r\n        this.timeoutId = undefined\r\n        this.setState({\r\n          transitionVisible: false,\r\n        })\r\n      }, 500)\r\n    })\r\n\r\n    this.container.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'instant',\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId)\r\n    }\r\n    this.container.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'instant',\r\n    })\r\n    window.projectListToProjectTransition = undefined\r\n  }\r\n\r\n  goToWork(e) {\r\n    e.preventDefault()\r\n    this.props.router.push('/work', undefined, { shallow: true })\r\n  }\r\n\r\n  setActiveSlide(slide, e) {\r\n    e.preventDefault()\r\n    if (this.state.activeSlide !== slide && !this.isSliderSliding) {\r\n      this.isSliderSliding = true\r\n      window.setTimeout(() => {\r\n        this.isSliderSliding = false\r\n      }, 500)\r\n      this.setState({ activeSlide: slide })\r\n      this.sliderRef.current.slickGoTo(slide)\r\n    }\r\n  }\r\n\r\n  onSwipe(direction) {\r\n    this.setState({ activeSlide: direction === 'left' ? 1 : 0 })\r\n  }\r\n\r\n  static getCloseButton() {\r\n    return (\r\n      <div className=\"project-close-button-container\">\r\n        <div>x</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderContent() {\r\n    return this.state.project ? this.renderContentWithProject() : this.renderContentWithoutProject()\r\n  }\r\n\r\n  renderContentWithoutProject() {\r\n    return <></>\r\n  }\r\n\r\n  renderContentWithProject() {\r\n\r\n    const tabs = [\r\n      {\r\n        test: this.state.project.description_project || '',\r\n        name: 'Le projet',\r\n        content: this.state.project.description_project || '',\r\n      },\r\n      {\r\n        test: this.state.project.description_mission,\r\n        name: 'La mission',\r\n        content: this.state.project.description_mission,\r\n      },\r\n      {\r\n        test: this.state.project.start,\r\n        name: 'La durÃ©e',\r\n        content: `${moment(this.state.project.start).locale('fr').format('LL')} - ${this.state.project.end\r\n          ? moment(this.state.project.end).locale('fr').format('LL') : 'Actuel'}`,\r\n      },\r\n    ].filter((t) => t.test)\r\n\r\n    return (\r\n      <div id=\"project-page-super-container\">\r\n        <div className=\"project-page-background\" />\r\n        <div id=\"project-page-container\">\r\n          <div className=\"project-info-container\">\r\n            <div className=\"project-description-container\">\r\n              <Row className=\"project-header\">\r\n                <div style={{ display: 'inline-block', position: 'relative' }}>\r\n                  <Project\r\n                    backgroundColor={this.state.project.backgroundColor}\r\n                    backgroundImage={this.state.project.backgroundImage}\r\n                    name={this.state.project.name}\r\n                    logo={this.state.project.logo}\r\n                    isHoverable={false}\r\n                    fullSize\r\n                  />\r\n                  <button type=\"submit\" className=\"back-button-container\" onClick={this.goToWork}><div>&#8249;</div></button>\r\n                </div>\r\n                <div className=\"project-title-container\">\r\n                  <Title text={this.state.project.name} noMargin />\r\n                  {this.state.project.url\r\n                    && (\r\n                      <div className=\"view-project-anchor link\">\r\n                        <a\r\n                          href={this.state.project.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          Voir le projet\r\n                            </a>\r\n                      </div>\r\n                    )}\r\n                  <ScrollableRow className=\"project-skills-container\" step={164 / 2.5}>\r\n                    {this.state.project.languages.map(SkillService.getFromName)\r\n                      .map((skill) => (\r\n                        <Item key={skill.name}>\r\n                          <Link href={`/work?skill=${encodeURIComponent(skill.name)}`}>\r\n                            <Skill\r\n                              name={skill.name}\r\n                              backgroundColor={skill.backgroundColor}\r\n                              backgroundImage={skill.backgroundImage}\r\n                              experience={skill.experience}\r\n                              logo={skill.logo}\r\n                              isLittle\r\n                            />\r\n                          </Link>\r\n                        </Item>\r\n                      ))}\r\n                  </ScrollableRow>\r\n                </div>\r\n              </Row>\r\n              <div className=\"project-scroller-container bp-small\">\r\n                <RectScroller>\r\n                  {this.state.project.images.map((image) => (\r\n                    <img src={`/images-webp/project/${image}`} key={image} style={{ backgroundColor: this.state.project.backgroundColor }} alt={`${this.state.project.name} ${image}`} />\r\n                  ))}\r\n                </RectScroller>\r\n              </div>\r\n              <div className=\"project-description-header\">\r\n                {\r\n                  tabs.map((tab, idx) => (\r\n                    <button\r\n                      type=\"submit\"\r\n                      key={tab.name}\r\n                      className={this.state.activeSlide === idx ? 'isActive' : undefined}\r\n                      onClick={(e) => this.setActiveSlide(idx, e)}\r\n                    >\r\n                      {tab.name}\r\n                    </button>\r\n                  ))\r\n                }\r\n              </div>\r\n              <div className=\"project-description-content\">\r\n                <Slider\r\n                  settings={{ dots: false, arrows: false, infinite: false }}\r\n                  ref={this.sliderRef}\r\n                  onSwipe={this.onSwipe}\r\n                >\r\n                  {tabs.map((tab) => <Description text={tab.content} key={`${tab.name}|content`} noMargin />)}\r\n                </Slider>\r\n              </div>\r\n            </div>\r\n            <div className=\"project-scroller-container bp-large\">\r\n              <RectScroller>\r\n                {this.state.project.images.map((image) => (\r\n                  <Zoomable key={image} closeButton={ProjectPage.getCloseButton()}>\r\n                    <img src={`/images-webp/project/${image}`} alt={`${this.state.project.name} ${image}`} style={{ backgroundColor: this.state.project.backgroundColor, height: '100%', width: '100%' }} />\r\n                  </Zoomable>\r\n                ))}\r\n              </RectScroller>\r\n            </div>\r\n            {this.state.transitionVisible\r\n              && (\r\n                <ProjectOverlay\r\n                  outTransition\r\n                  backgroundColor={this.state.project.backgroundColor}\r\n                  logo={this.state.project.logo}\r\n                  isVisible\r\n                />\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ProjectPage)\r\n"]},"metadata":{},"sourceType":"module"}