{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/meddou/projects/perso/meddou.com/src/component/Scroller.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Scroller extends Component {\n  constructor(props) {\n    super(props);\n    this.containerRef = /*#__PURE__*/React.createRef();\n    this.sectionRefs = [];\n    this.lastScrollTop = 0;\n    this.isScrolling = false;\n    this.canScroll = true;\n    this.scrollTimeout = undefined;\n    this.scrollTimer = undefined;\n    this.canScrollTimeout = undefined;\n    this.sections = React.Children.map(props.children, child => {\n      const ref = /*#__PURE__*/React.createRef();\n      this.sectionRefs.push(ref);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        children: child\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    });\n    this.index = props.index || 0;\n    this.nextIndex = props.index || 0;\n    this.scrollTimerFx = this.scrollTimerFx.bind(this);\n    console.log('IN CTOR');\n  }\n\n  componentDidMount() {\n    this.container = window;\n    console.log(this.index);\n    this.scrollToElement(this.sectionRefs[this.index].current, this.index, false);\n    this.bindListener();\n  }\n\n  componentDidUpdate() {\n    const {\n      index\n    } = this.props;\n    console.log(index, this.nextIndex);\n\n    if (this.nextIndex !== index) {\n      // this.index = index\n      this.isScrolling = true;\n      this.scrollToElement(this.sectionRefs[this.index].current, index);\n    }\n  }\n\n  componentWillUnmount() {\n    this.unbindListener();\n    window.clearTimeout(this.scrollTimeout);\n    window.clearTimeout(this.canScrollTimeout);\n  }\n\n  onScroll(e) {\n    const scrollDirectionCoeff = this.getScrollDirection() === true ? 1 : -1;\n\n    if (this.index + scrollDirectionCoeff < this.sectionRefs.length && this.index + scrollDirectionCoeff >= 0 && e.timeStamp >= 1000) {\n      const nextIndex = this.index + scrollDirectionCoeff;\n      const nextElement = this.sectionRefs[nextIndex].current.getBoundingClientRect();\n\n      if (scrollDirectionCoeff === 1 || scrollDirectionCoeff === -1 && nextElement.top + nextElement.height >= 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.nextIndex = nextIndex;\n        this.notifyOnScroll(nextIndex);\n        this.scrollToElement(this.sectionRefs[nextIndex].current, nextIndex);\n      }\n    }\n  }\n\n  getContainerBounding() {\n    return this.container.getBoundingClientRect();\n  }\n\n  getContainerScrollTop() {\n    return this.container.scrollTop || window.pageYOffset || document.documentElement.scrollTop;\n  }\n\n  getScrollDirection() {\n    const st = this.getContainerScrollTop();\n    const ret = st > this.lastScrollTop;\n    this.lastScrollTop = st <= 0 ? 0 : st;\n    return ret;\n  }\n\n  scrollToElement(element, index, isSmooth = true) {\n    const top = this.getContainerScrollTop();\n    const elementRect = element.getBoundingClientRect(); // this.isScrolling = true\n\n    this.container.scrollTo({\n      behavior: isSmooth ? 'smooth' : 'instant',\n      left: 0,\n      top: top + elementRect.top\n    });\n    this.index = index;\n    this.nextIndex = index;\n    window.oldIndex = index;\n  }\n\n  notifyOnScroll(index) {\n    const {\n      onScroll\n    } = this.props;\n\n    if (onScroll) {\n      onScroll(index);\n    }\n  }\n\n  scrollTimerFx(e) {\n    // console.log('IN SCROLL')\n    if (this.canScroll) {\n      /**\r\n       * @LINK https://stackoverflow.com/questions/4620906/how-do-i-know-when-ive-stopped-scrolling\r\n       */\n      if (this.scrollTimer !== null) {\n        clearTimeout(this.scrollTimer);\n      }\n\n      this.scrollTimer = setTimeout(() => {\n        if (this.isScrolling) {\n          // console.log('SCROLL END');\n          this.canScroll = false;\n          this.getScrollDirection();\n          this.isScrolling = false;\n          this.canScrollTimeout = window.setTimeout(() => {\n            this.canScroll = true;\n          }, 50);\n        } else {\n          // console.log('SCROLL START');\n          this.isScrolling = true;\n          this.onScroll(e);\n        }\n      }, 150);\n    } else {\n      this.getScrollDirection();\n    }\n  }\n\n  bindListener() {\n    this.container.addEventListener('scroll', this.scrollTimerFx);\n  }\n\n  unbindListener() {\n    this.container.removeEventListener('scroll', this.scrollTimerFx);\n  }\n\n  render() {\n    const {\n      className\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.containerRef,\n      className: ['scroller-main-container', className || ''].join(' '),\n      children: this.sections.map(child => child)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nScroller.propTypes = {\n  index: PropTypes.number.isRequired,\n  children: PropTypes.arrayOf(PropTypes.node.isRequired).isRequired,\n  onScroll: PropTypes.func.isRequired\n};\nexport default Scroller;","map":{"version":3,"sources":["/home/meddou/projects/perso/meddou.com/src/component/Scroller.jsx"],"names":["React","Component","PropTypes","Scroller","constructor","props","containerRef","createRef","sectionRefs","lastScrollTop","isScrolling","canScroll","scrollTimeout","undefined","scrollTimer","canScrollTimeout","sections","Children","map","children","child","ref","push","index","nextIndex","scrollTimerFx","bind","console","log","componentDidMount","container","window","scrollToElement","current","bindListener","componentDidUpdate","componentWillUnmount","unbindListener","clearTimeout","onScroll","e","scrollDirectionCoeff","getScrollDirection","length","timeStamp","nextElement","getBoundingClientRect","top","height","preventDefault","stopPropagation","notifyOnScroll","getContainerBounding","getContainerScrollTop","scrollTop","pageYOffset","document","documentElement","st","ret","element","isSmooth","elementRect","scrollTo","behavior","left","oldIndex","setTimeout","addEventListener","removeEventListener","render","className","join","propTypes","number","isRequired","arrayOf","node","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Scroller extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.containerRef = React.createRef()\r\n    this.sectionRefs = []\r\n    this.lastScrollTop = 0\r\n    this.isScrolling = false\r\n    this.canScroll = true\r\n\r\n    this.scrollTimeout = undefined\r\n    this.scrollTimer = undefined\r\n    this.canScrollTimeout = undefined\r\n\r\n    this.sections = React.Children.map(props.children, (child) => {\r\n      const ref = React.createRef()\r\n\r\n      this.sectionRefs.push(ref)\r\n      return <div ref={ref}>{child}</div>\r\n    })\r\n\r\n    this.index = props.index || 0\r\n\r\n    this.nextIndex = props.index || 0\r\n\r\n    this.scrollTimerFx = this.scrollTimerFx.bind(this)\r\n    console.log('IN CTOR')\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.container = window\r\n\r\n    console.log(this.index)\r\n    this.scrollToElement(this.sectionRefs[this.index].current, this.index, false)\r\n    this.bindListener()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { index } = this.props\r\n\r\n    console.log(index, this.nextIndex)\r\n    if (this.nextIndex !== index) {\r\n      // this.index = index\r\n      this.isScrolling = true\r\n      this.scrollToElement(this.sectionRefs[this.index].current, index)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unbindListener()\r\n    window.clearTimeout(this.scrollTimeout)\r\n    window.clearTimeout(this.canScrollTimeout)\r\n  }\r\n\r\n  onScroll(e) {\r\n    const scrollDirectionCoeff = this.getScrollDirection() === true ? 1 : -1\r\n\r\n    if ((this.index + scrollDirectionCoeff) < this.sectionRefs.length\r\n      && (this.index + scrollDirectionCoeff) >= 0 && e.timeStamp >= 1000) {\r\n      const nextIndex = this.index + scrollDirectionCoeff\r\n\r\n      const nextElement = this.sectionRefs[nextIndex].current.getBoundingClientRect()\r\n\r\n      if ((scrollDirectionCoeff === 1)\r\n      || (scrollDirectionCoeff === -1 && nextElement.top + nextElement.height >= 0)) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.nextIndex = nextIndex\r\n        this.notifyOnScroll(nextIndex)\r\n        this.scrollToElement(this.sectionRefs[nextIndex].current, nextIndex)\r\n      }\r\n    }\r\n  }\r\n\r\n  getContainerBounding() {\r\n    return this.container.getBoundingClientRect()\r\n  }\r\n\r\n  getContainerScrollTop() {\r\n    return this.container.scrollTop || window.pageYOffset || document.documentElement.scrollTop\r\n  }\r\n\r\n  getScrollDirection() {\r\n    const st = this.getContainerScrollTop()\r\n    const ret = st > this.lastScrollTop\r\n\r\n    this.lastScrollTop = st <= 0 ? 0 : st\r\n    return ret\r\n  }\r\n\r\n  scrollToElement(element, index, isSmooth = true) {\r\n    const top = this.getContainerScrollTop()\r\n    const elementRect = element.getBoundingClientRect()\r\n\r\n    // this.isScrolling = true\r\n    this.container.scrollTo({\r\n      behavior: isSmooth ? 'smooth' : 'instant',\r\n      left: 0,\r\n      top: top + elementRect.top,\r\n    })\r\n\r\n    this.index = index\r\n    this.nextIndex = index\r\n    window.oldIndex = index\r\n  }\r\n\r\n  notifyOnScroll(index) {\r\n    const { onScroll } = this.props\r\n\r\n    if (onScroll) {\r\n      onScroll(index)\r\n    }\r\n  }\r\n\r\n  scrollTimerFx(e) {\r\n    // console.log('IN SCROLL')\r\n    if (this.canScroll) {\r\n      /**\r\n       * @LINK https://stackoverflow.com/questions/4620906/how-do-i-know-when-ive-stopped-scrolling\r\n       */\r\n      if (this.scrollTimer !== null) {\r\n        clearTimeout(this.scrollTimer);\r\n      }\r\n      this.scrollTimer = setTimeout(() => {\r\n        if (this.isScrolling) {\r\n          // console.log('SCROLL END');\r\n          this.canScroll = false\r\n          this.getScrollDirection()\r\n          this.isScrolling = false\r\n          this.canScrollTimeout = window.setTimeout(() => {\r\n            this.canScroll = true\r\n          }, 50)\r\n        } else {\r\n          // console.log('SCROLL START');\r\n          this.isScrolling = true\r\n          this.onScroll(e)\r\n        }\r\n      }, 150);\r\n    } else {\r\n      this.getScrollDirection()\r\n    }\r\n  }\r\n\r\n  bindListener() {\r\n    this.container.addEventListener('scroll', this.scrollTimerFx)\r\n  }\r\n\r\n  unbindListener() {\r\n    this.container.removeEventListener('scroll', this.scrollTimerFx)\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props\r\n\r\n    return (\r\n      <div ref={this.containerRef} className={['scroller-main-container', className || ''].join(' ')}>\r\n        { this.sections.map((child) => child) }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nScroller.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  children: PropTypes.arrayOf(PropTypes.node.isRequired).isRequired,\r\n  onScroll: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Scroller\r\n"]},"metadata":{},"sourceType":"module"}