{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/meddou/projects/perso/meddou.com/src/component/scrollable-row/ScrollableRow.jsx\";\nimport React, { Component } from 'react';\nimport Row from '../../layout/row/Row';\n\nclass ScrollableRow extends Component {\n  constructor(props) {\n    super(props);\n    this.elementRefs = [];\n    this.index = 1;\n    this.containerRef = /*#__PURE__*/React.createRef();\n    this.intervalId = undefined;\n\n    for (let i = 0; i < props.children.length; i += 1) {\n      this.elementRefs.push( /*#__PURE__*/React.createRef());\n    }\n\n    this.setContainerRef = this.setContainerRef.bind(this);\n  }\n\n  componentDidMount() {\n    let direction = 1;\n    const {\n      step\n    } = this.props;\n\n    if (step) {\n      this.intervalId = setInterval(() => {\n        this.containerRef.scrollBy({\n          left: step * direction,\n          behavior: 'smooth'\n        });\n\n        if (direction === 1 && this.containerRef.scrollLeft + this.containerRef.clientWidth >= this.containerRef.scrollWidth || direction === -1 && this.containerRef.scrollLeft === 0) {\n          direction *= -1;\n        }\n      }, 1500);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  setContainerRef(ref) {\n    this.containerRef = ref;\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      style: style,\n      customRef: this.setContainerRef,\n      noWrap: true,\n      className: className,\n      children: children.map((child, idx) =>\n      /*#__PURE__*/\n      // eslint-disable-next-line\n      _jsxDEV(\"span\", {\n        ref: this.elementRefs[idx],\n        children: child\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ScrollableRow;","map":{"version":3,"sources":["/home/meddou/projects/perso/meddou.com/src/component/scrollable-row/ScrollableRow.jsx"],"names":["React","Component","Row","ScrollableRow","constructor","props","elementRefs","index","containerRef","createRef","intervalId","undefined","i","children","length","push","setContainerRef","bind","componentDidMount","direction","step","setInterval","scrollBy","left","behavior","scrollLeft","clientWidth","scrollWidth","componentWillUnmount","clearInterval","ref","render","style","className","map","child","idx"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,WAAL,GAAmB,EAAnB;AAEA,SAAKC,KAAL,GAAa,CAAb;AAEA,SAAKC,YAAL,gBAAoBR,KAAK,CAACS,SAAN,EAApB;AAEA,SAAKC,UAAL,GAAkBC,SAAlB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACQ,QAAN,CAAeC,MAAnC,EAA2CF,CAAC,IAAI,CAAhD,EAAmD;AACjD,WAAKN,WAAL,CAAiBS,IAAjB,eAAsBf,KAAK,CAACS,SAAN,EAAtB;AACD;;AACD,SAAKO,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,GAAG,CAAhB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKf,KAAtB;;AAEA,QAAIe,IAAJ,EAAU;AACR,WAAKV,UAAL,GAAkBW,WAAW,CAAC,MAAM;AAClC,aAAKb,YAAL,CAAkBc,QAAlB,CAA2B;AAAEC,UAAAA,IAAI,EAAEH,IAAI,GAAGD,SAAf;AAA0BK,UAAAA,QAAQ,EAAE;AAApC,SAA3B;;AACA,YAAKL,SAAS,KAAK,CAAd,IACA,KAAKX,YAAL,CAAkBiB,UAAlB,GAA+B,KAAKjB,YAAL,CAAkBkB,WAAjD,IACE,KAAKlB,YAAL,CAAkBmB,WAFrB,IAGER,SAAS,KAAK,CAAC,CAAf,IAAoB,KAAKX,YAAL,CAAkBiB,UAAlB,KAAiC,CAH3D,EAG+D;AAC7DN,UAAAA,SAAS,IAAI,CAAC,CAAd;AACD;AACF,OAR4B,EAQ1B,IAR0B,CAA7B;AASD;AACF;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKlB,UAAT,EAAqB;AACnBmB,MAAAA,aAAa,CAAC,KAAKnB,UAAN,CAAb;AACD;AACF;;AAEDM,EAAAA,eAAe,CAACc,GAAD,EAAM;AACnB,SAAKtB,YAAL,GAAoBsB,GAApB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBpB,MAAAA;AAApB,QAAiC,KAAKR,KAA5C;AAEA,wBACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE2B,KAAZ;AAAmB,MAAA,SAAS,EAAE,KAAKhB,eAAnC;AAAoD,MAAA,MAAM,MAA1D;AAA2D,MAAA,SAAS,EAAEiB,SAAtE;AAAA,gBACGpB,QAAQ,CAACqB,GAAT,CAAa,CAACC,KAAD,EAAQC,GAAR;AAAA;AACZ;AACA;AAAM,QAAA,GAAG,EAAE,KAAK9B,WAAL,CAAiB8B,GAAjB,CAAX;AAAA,kBACGD;AADH,SAAuCC,GAAvC;AAAA;AAAA;AAAA;AAAA,cAFD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA1DmC;;AA6DtC,eAAejC,aAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Row from '../../layout/row/Row'\r\n\r\nclass ScrollableRow extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.elementRefs = []\r\n\r\n    this.index = 1\r\n\r\n    this.containerRef = React.createRef()\r\n\r\n    this.intervalId = undefined\r\n\r\n    for (let i = 0; i < props.children.length; i += 1) {\r\n      this.elementRefs.push(React.createRef())\r\n    }\r\n    this.setContainerRef = this.setContainerRef.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    let direction = 1\r\n    const { step } = this.props\r\n\r\n    if (step) {\r\n      this.intervalId = setInterval(() => {\r\n        this.containerRef.scrollBy({ left: step * direction, behavior: 'smooth' })\r\n        if ((direction === 1\r\n          && this.containerRef.scrollLeft + this.containerRef.clientWidth\r\n            >= this.containerRef.scrollWidth)\r\n          || (direction === -1 && this.containerRef.scrollLeft === 0)) {\r\n          direction *= -1\r\n        }\r\n      }, 1500)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId)\r\n    }\r\n  }\r\n\r\n  setContainerRef(ref) {\r\n    this.containerRef = ref\r\n  }\r\n\r\n  render() {\r\n    const { style, className, children } = this.props\r\n\r\n    return (\r\n      <Row style={style} customRef={this.setContainerRef} noWrap className={className}>\r\n        {children.map((child, idx) => (\r\n          // eslint-disable-next-line\r\n          <span ref={this.elementRefs[idx]} key={idx}>\r\n            {child}\r\n          </span>\r\n        ))}\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScrollableRow\r\n"]},"metadata":{},"sourceType":"module"}