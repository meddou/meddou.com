{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/meddou/projects/perso/meddou.com/src/pages/ProjectList.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport Location from '../Location';\nimport Projects from '../data/projects.json';\nimport Title from '../component/title/Title';\nimport Project from '../component/project/Project';\nimport ProjectOverlay from '../component/project/ProjectOverlay';\nimport Skill from '../component/skill/Skill';\nimport Row from '../layout/row/Row';\nimport Item from '../layout/item/Item';\nimport BasicPage from './BasicPage';\nimport SkillService from '../services/Skill';\nimport './BasicPage.css';\nimport './ProjectList.css';\n\nclass ProjectListPage extends BasicPage {\n  constructor(props) {\n    super(props);\n    this.hasMoreSkill = false;\n    this.projects = Projects.filter(p => p.isVisible !== false);\n    this.skills = SkillService.getFilterable();\n    this.filters = [];\n    this.filtersGroup = ['iOS', 'NodeJS', 'Angular', 'Laravel', 'MongoDB', 'C++'];\n    this.state = {\n      projects: this.projects.slice(0),\n      skills: this.skills.slice(0),\n      selectedProject: undefined\n    };\n  }\n\n  addSkillFromQS() {\n    const paramSkills = Location.qs(this.props.router).skill ? ProjectListPage.skillToArray(Location.qs(this.props.router).skill) : [];\n    const newSkills = this.state.skills.slice(0);\n    let paramSkillObj;\n\n    const skillCmp = second => first => first.name === second;\n\n    if (paramSkills && paramSkills.length > 0) {\n      for (let i = 0; i < paramSkills.length; i += 1) {\n        paramSkillObj = SkillService.getFromName(paramSkills[i]);\n\n        if (newSkills.findIndex(skillCmp(paramSkills[i])) === -1) {\n          if (this.hasMoreSkill === false) {\n            this.filtersGroup.unshift(paramSkills[i]);\n            this.hasMoreSkill = true;\n          }\n\n          newSkills.unshift(paramSkillObj);\n          this.setState({\n            skills: newSkills\n          });\n        }\n      }\n    }\n  }\n\n  hasSkills(toFind) {\n    for (let i = 0; i < toFind.length; i += 1) {\n      if (this.filters.indexOf(toFind[i]) === -1) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  filterFromQS(needClearFilters = false) {\n    const paramSkills = Location.qs(this.props.router).skill;\n\n    if (paramSkills && !this.hasSkills(ProjectListPage.skillToArray(paramSkills))) {\n      if (needClearFilters) {\n        this.filters = [];\n      }\n\n      this.filterProjects(paramSkills);\n    }\n  }\n\n  componentDidMount() {\n    this.addSkillFromQS();\n    this.filterFromQS();\n  }\n\n  componentDidUpdate() {\n    this.addSkillFromQS();\n    this.filterFromQS(true);\n  }\n\n  static fmtSkills(skill) {\n    if (skill) {\n      if (Array.isArray(skill)) {\n        return skill;\n      }\n\n      return [skill];\n    }\n\n    return [];\n  }\n\n  static skillToArray(skill) {\n    const skills = this.fmtSkills(skill);\n    return skills.map(mSkill => decodeURIComponent(mSkill));\n  }\n\n  filterProjects(skill, needToUpdateUrl = false) {\n    const filtered = [];\n    const skills = ProjectListPage.skillToArray(skill);\n    let idx;\n    let isMatching = true;\n\n    for (let k = 0; k < skills.length; k += 1) {\n      idx = this.filters.indexOf(skills[k]);\n\n      if (skills[k] && idx === -1) {\n        this.filters.push(skills[k]);\n      } else if (skills[k]) {\n        this.filters.splice(idx, 1);\n      }\n    }\n\n    for (let i = 0; i < this.projects.length; i += 1) {\n      isMatching = true;\n\n      for (let j = 0; j < this.filters.length; j += 1) {\n        if (this.projects[i].languages.indexOf(this.filters[j]) === -1) {\n          isMatching = false;\n          break;\n        }\n      }\n\n      if (isMatching) {\n        filtered.push(this.projects[i]);\n      }\n    }\n\n    if (needToUpdateUrl) {\n      this.props.router.replace(`/work?${this.filters.map(f => `skill=${encodeURIComponent(f)}`).join('&')}`);\n    }\n\n    this.setState({\n      projects: filtered\n    });\n  }\n\n  getSkillGrouped() {\n    const grouped = this.state.skills.slice(0);\n    const groups = [{\n      group: [],\n      id: -1\n    }];\n\n    for (let i = 0; i < grouped.length; i += 1) {\n      groups[groups.length - 1].group.push(grouped[i]);\n\n      if (this.filtersGroup.indexOf(grouped[i].name) !== -1) {\n        groups.push({\n          group: [],\n          id: groups.length\n        });\n      }\n    }\n\n    return groups;\n  }\n\n  goToProject(project, e) {\n    e.preventDefault();\n    this.setState({\n      selectedProject: project\n    }, () => {\n      setTimeout(() => {\n        window.projectListToProjectTransition = true;\n        this.props.router.push(`/work/${project.name}`, undefined, {\n          shallow: true\n        });\n      }, 500);\n    });\n  }\n\n  clearFilters(e) {\n    e.preventDefault();\n    this.props.router.replace('/work');\n    this.filters = [];\n    this.filterProjects(undefined);\n  }\n\n  renderContent() {\n    const fakeProjects = new Array(10).map((v, idx) => _objectSpread(_objectSpread({}, this.projects[0]), {}, {\n      name: `fake|${idx}`\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-basic-page project-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: '64px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          text: \"Mes projets\",\n          noMargin: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginTop: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"filter-container bp-large\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"filter-text\",\n            style: {\n              cursor: `${this.filters.length > 0 ? 'pointer' : 'normal'}`\n            },\n            onClick: this.clearFilters.bind(this),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subTitle\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  visibility: this.filters.length > 0 ? 'visible' : 'hidden'\n                },\n                children: \"(X) \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), \"FILTRES\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), this.getSkillGrouped().map(group => /*#__PURE__*/_jsxDEV(Row, {\n            className: \"filter-row\",\n            children: group.group.map(skill => /*#__PURE__*/_jsxDEV(Item, {\n              onClick: () => this.filterProjects(skill.name, true),\n              children: /*#__PURE__*/_jsxDEV(Skill, {\n                name: skill.name,\n                backgroundImage: skill.backgroundImage,\n                backgroundColor: skill.backgroundColor,\n                logo: skill.logo,\n                experience: skill.experience,\n                isSelected: this.filters.indexOf(skill.name) !== -1,\n                isLittle: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this)\n            }, skill.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this))\n          }, group.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          center: true,\n          className: \"project-list-container\",\n          children: [this.state.projects.map(project => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => this.goToProject(project, e),\n            className: \"project-child-container\",\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              children: /*#__PURE__*/_jsxDEV(Project, {\n                backgroundColor: project.backgroundColor,\n                backgroundImage: project.backgroundImage,\n                name: project.name,\n                logo: project.logo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, project.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)), this.state.projects.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"no-project-text-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"Pas de projet\",\n              className: \"emoji-container\",\n              children: \"\\uD83D\\uDE25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"Aucun projet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectOverlay, {\n        inTransition: true,\n        isVisible: !!this.state.selectedProject,\n        backgroundColor: this.state.selectedProject ? this.state.selectedProject.backgroundColor : undefined,\n        logo: this.state.selectedProject ? this.state.selectedProject.logo : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withRouter(ProjectListPage);","map":{"version":3,"sources":["/home/meddou/projects/perso/meddou.com/src/pages/ProjectList.jsx"],"names":["React","withRouter","Location","Projects","Title","Project","ProjectOverlay","Skill","Row","Item","BasicPage","SkillService","ProjectListPage","constructor","props","hasMoreSkill","projects","filter","p","isVisible","skills","getFilterable","filters","filtersGroup","state","slice","selectedProject","undefined","addSkillFromQS","paramSkills","qs","router","skill","skillToArray","newSkills","paramSkillObj","skillCmp","second","first","name","length","i","getFromName","findIndex","unshift","setState","hasSkills","toFind","indexOf","filterFromQS","needClearFilters","filterProjects","componentDidMount","componentDidUpdate","fmtSkills","Array","isArray","map","mSkill","decodeURIComponent","needToUpdateUrl","filtered","idx","isMatching","k","push","splice","j","languages","replace","f","encodeURIComponent","join","getSkillGrouped","grouped","groups","group","id","goToProject","project","e","preventDefault","setTimeout","window","projectListToProjectTransition","shallow","clearFilters","renderContent","fakeProjects","v","paddingTop","marginTop","cursor","bind","visibility","backgroundImage","backgroundColor","logo","experience"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'next/router'\r\n\r\nimport Location from '../Location'\r\n\r\nimport Projects from '../data/projects.json'\r\n\r\nimport Title from '../component/title/Title'\r\nimport Project from '../component/project/Project'\r\nimport ProjectOverlay from '../component/project/ProjectOverlay'\r\nimport Skill from '../component/skill/Skill'\r\n\r\nimport Row from '../layout/row/Row'\r\nimport Item from '../layout/item/Item'\r\n\r\nimport BasicPage from './BasicPage'\r\n\r\nimport SkillService from '../services/Skill'\r\n\r\nimport './BasicPage.css'\r\nimport './ProjectList.css'\r\n\r\nclass ProjectListPage extends BasicPage {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.hasMoreSkill = false\r\n\r\n    this.projects = Projects.filter((p) => p.isVisible !== false)\r\n    this.skills = SkillService.getFilterable()\r\n\r\n    this.filters = []\r\n\r\n    this.filtersGroup = ['iOS', 'NodeJS', 'Angular', 'Laravel', 'MongoDB', 'C++']\r\n\r\n    this.state = {\r\n      projects: this.projects.slice(0),\r\n      skills: this.skills.slice(0),\r\n      selectedProject: undefined,\r\n    }\r\n  }\r\n\r\n  addSkillFromQS() {\r\n    const paramSkills = Location.qs(this.props.router).skill ? ProjectListPage.skillToArray(Location.qs(this.props.router).skill) : []\r\n    const newSkills = this.state.skills.slice(0)\r\n\r\n    let paramSkillObj\r\n\r\n    const skillCmp = (second) => (first) => first.name === second\r\n\r\n    if (paramSkills && paramSkills.length > 0) {\r\n      for (let i = 0; i < paramSkills.length; i += 1) {\r\n        paramSkillObj = SkillService.getFromName(paramSkills[i])\r\n\r\n        if (newSkills.findIndex(skillCmp(paramSkills[i])) === -1) {\r\n          if (this.hasMoreSkill === false) {\r\n            this.filtersGroup.unshift(paramSkills[i])\r\n            this.hasMoreSkill = true\r\n          }\r\n          newSkills.unshift(paramSkillObj)\r\n          this.setState({\r\n            skills: newSkills,\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  hasSkills(toFind) {\r\n    for (let i = 0; i < toFind.length; i += 1) {\r\n      if (this.filters.indexOf(toFind[i]) === -1) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  filterFromQS(needClearFilters = false) {\r\n    const paramSkills = Location.qs(this.props.router).skill\r\n\r\n    if (paramSkills && !this.hasSkills(ProjectListPage.skillToArray(paramSkills))) {\r\n      if (needClearFilters) {\r\n        this.filters = []\r\n      }\r\n      this.filterProjects(paramSkills)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.addSkillFromQS()\r\n    this.filterFromQS()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.addSkillFromQS()\r\n    this.filterFromQS(true)\r\n  }\r\n\r\n  static fmtSkills(skill) {\r\n    if (skill) {\r\n      if (Array.isArray(skill)) {\r\n        return skill\r\n      }\r\n\r\n      return [skill]\r\n    }\r\n    return []\r\n  }\r\n\r\n  static skillToArray(skill) {\r\n    const skills = this.fmtSkills(skill)\r\n    return skills.map((mSkill) => decodeURIComponent(mSkill))\r\n  }\r\n\r\n  filterProjects(skill, needToUpdateUrl = false) {\r\n    const filtered = []\r\n    const skills = ProjectListPage.skillToArray(skill)\r\n    let idx\r\n    let isMatching = true\r\n\r\n    for (let k = 0; k < skills.length; k += 1) {\r\n      idx = this.filters.indexOf(skills[k])\r\n      if (skills[k] && idx === -1) {\r\n        this.filters.push(skills[k])\r\n      } else if (skills[k]) {\r\n        this.filters.splice(idx, 1)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.projects.length; i += 1) {\r\n      isMatching = true\r\n      for (let j = 0; j < this.filters.length; j += 1) {\r\n        if (this.projects[i].languages.indexOf(this.filters[j]) === -1) {\r\n          isMatching = false\r\n          break\r\n        }\r\n      }\r\n      if (isMatching) {\r\n        filtered.push(this.projects[i])\r\n      }\r\n    }\r\n    if (needToUpdateUrl) {\r\n      this.props.router.replace(`/work?${this.filters.map((f) => `skill=${encodeURIComponent(f)}`).join('&')}`)\r\n    }\r\n    this.setState({\r\n      projects: filtered,\r\n    })\r\n  }\r\n\r\n  getSkillGrouped() {\r\n    const grouped = this.state.skills.slice(0)\r\n    const groups = [{ group: [], id: -1 }]\r\n\r\n    for (let i = 0; i < grouped.length; i += 1) {\r\n      groups[groups.length - 1].group.push(grouped[i])\r\n      if (this.filtersGroup.indexOf(grouped[i].name) !== -1) {\r\n        groups.push({ group: [], id: groups.length })\r\n      }\r\n    }\r\n\r\n    return groups\r\n  }\r\n\r\n  goToProject(project, e) {\r\n    e.preventDefault()\r\n    this.setState({\r\n      selectedProject: project,\r\n    }, () => {\r\n      setTimeout(() => {\r\n        window.projectListToProjectTransition = true\r\n        this.props.router.push(`/work/${project.name}`, undefined, { shallow: true })\r\n      }, 500)\r\n    })\r\n  }\r\n\r\n  clearFilters(e) {\r\n    e.preventDefault()\r\n    this.props.router.replace('/work')\r\n    this.filters = []\r\n    this.filterProjects(undefined)\r\n  }\r\n\r\n  renderContent() {\r\n    const fakeProjects = new Array(10).map((v, idx) => ({\r\n      ...this.projects[0],\r\n      name: `fake|${idx}`,\r\n    }))\r\n\r\n    return (\r\n      <div className=\"sub-basic-page project-list-container\">\r\n        <div className=\"project-background\" />\r\n\r\n        <div style={{ paddingTop: '64px' }}>\r\n          <Title text=\"Mes projets\" noMargin />\r\n        </div>\r\n        <Row style={{ marginTop: '16px' }}>\r\n          <Row className=\"filter-container bp-large\">\r\n            <button type=\"submit\" className=\"filter-text\" style={{ cursor: `${this.filters.length > 0 ? 'pointer' : 'normal'}` }} onClick={this.clearFilters.bind(this)}>\r\n              <span className=\"subTitle\">\r\n                <span style={{ visibility: this.filters.length > 0 ? 'visible' : 'hidden' }}>(X) </span>\r\n                FILTRES\r\n              </span>\r\n            </button>\r\n            { this.getSkillGrouped().map((group) => (\r\n              <Row className=\"filter-row\" key={group.id}>\r\n                {group.group.map((skill) => (\r\n                  <Item key={skill.name} onClick={() => this.filterProjects(skill.name, true)}>\r\n                    <Skill\r\n                      name={skill.name}\r\n                      backgroundImage={skill.backgroundImage}\r\n                      backgroundColor={skill.backgroundColor}\r\n                      logo={skill.logo}\r\n                      experience={skill.experience}\r\n                      isSelected={this.filters.indexOf(skill.name) !== -1}\r\n                      isLittle\r\n                    />\r\n                  </Item>\r\n                ))}\r\n              </Row>\r\n            ))}\r\n          </Row>\r\n\r\n          <Row center className=\"project-list-container\">\r\n            { this.state.projects.map((project) => (\r\n              <button type=\"submit\" onClick={(e) => this.goToProject(project, e)} key={project.name} className=\"project-child-container\">\r\n                <Item>\r\n                  <Project\r\n                    backgroundColor={project.backgroundColor}\r\n                    backgroundImage={project.backgroundImage}\r\n                    name={project.name}\r\n                    logo={project.logo}\r\n                  />\r\n                </Item>\r\n              </button>\r\n            ))}\r\n            { this.state.projects.length === 0 && (\r\n              <span className=\"no-project-text-container\">\r\n                <span role=\"img\" aria-label=\"Pas de projet\" className=\"emoji-container\">😥</span>\r\n                <sub>Aucun projet</sub>\r\n              </span>\r\n            )}\r\n          </Row>\r\n        </Row>\r\n        <ProjectOverlay\r\n          inTransition\r\n          isVisible={!!this.state.selectedProject}\r\n          backgroundColor={\r\n            this.state.selectedProject ? this.state.selectedProject.backgroundColor : undefined\r\n          }\r\n          logo={this.state.selectedProject ? this.state.selectedProject.logo : undefined}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ProjectListPage)\r\n"]},"metadata":{},"sourceType":"module"}