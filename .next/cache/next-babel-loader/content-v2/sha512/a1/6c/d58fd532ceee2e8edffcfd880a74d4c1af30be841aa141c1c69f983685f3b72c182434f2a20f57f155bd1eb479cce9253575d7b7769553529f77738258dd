{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/meddou/projects/perso/meddou.com/src/component/zoomable/Zoomable.jsx\";\nimport React, { Component } from 'react';\nimport './Zoomable.css';\n\nclass Zoomable extends Component {\n  constructor() {\n    super();\n    this.containerRef = /*#__PURE__*/React.createRef();\n    this.transitionDuration = 300;\n    this.copiedElement = undefined;\n    this.currentClickListener = undefined;\n    this.scaleFactor = undefined;\n    this.reelElementWidth = undefined;\n    this.reelElementHeight = undefined;\n    this.state = {\n      isZoom: false\n    };\n    this.zoomOrNot = this.zoomOrNot.bind(this);\n  }\n\n  zoomOrNot(event) {\n    const {\n      isZoom\n    } = this.state;\n\n    if (isZoom) {\n      this.unzoom();\n    } else {\n      this.zoom(event);\n    }\n  }\n\n  unzoom() {\n    if (this.copiedElement) {\n      this.copiedElement.style.transform = 'none';\n      this.copiedElement.firstChild.style.transform = 'none';\n      setTimeout(() => {\n        if (this.copiedElement.remove) {\n          this.copiedElement.remove();\n        } else if (this.copiedElement.parentNode) {\n          this.copiedElement.parentNode.removeChild(this.copiedElement);\n        }\n      }, this.transitionDuration);\n    }\n\n    this.setState({\n      isZoom: false\n    });\n  }\n\n  zoom(event) {\n    event.stopPropagation();\n    const reelElement = this.containerRef.current;\n    const absolutePosition = reelElement.getBoundingClientRect();\n    this.copiedElement = reelElement.cloneNode(true);\n    const scaledHeight = reelElement.clientHeight;\n    const scaledWidth = reelElement.clientWidth;\n    this.reelElementHeight = reelElement.clientHeight;\n    this.reelElementWidth = reelElement.clientWidth;\n    const self = this;\n    const windowWidth = window.innerWidth || window.innerWidth || document.documentElement.clientWidth;\n    const windowHeight = window.innerHeight || window.innerHeight || document.documentElement.clientHeight;\n    this.scaleFactor = windowWidth * 0.7 / reelElement.offsetWidth;\n    this.copiedElement.classList.add('zoomed');\n    this.copiedElement.style.left = `${absolutePosition.left}px`;\n    this.copiedElement.style.top = `${absolutePosition.top}px`;\n    this.copiedElement.style.height = `${reelElement.clientHeight}px`;\n    this.copiedElement.style.width = `${reelElement.clientWidth}px`;\n    this.currentClickListener = window.addEventListener('click', e => {\n      e.stopPropagation();\n      e.preventDefault();\n      window.removeEventListener('click', this);\n      self.unzoom();\n      return false;\n    });\n    document.getElementsByTagName('body')[0].appendChild(this.copiedElement);\n    this.setState({\n      isZoom: true\n    });\n    setTimeout(() => {\n      if (this.copiedElement.firstChild) {\n        this.copiedElement.firstChild.style.transform = `scale(${this.scaleFactor})`;\n      }\n\n      this.copiedElement.style.transform = `\n                translate(\n                    calc((${windowWidth / 2}px - ${absolutePosition.left}px - ${scaledWidth / 2}px)),\n                    calc((${windowHeight / 2}px - ${absolutePosition.top}px - ${scaledHeight / 2}px))\n                )\n            `;\n    }, 0);\n  }\n\n  render() {\n    const {\n      children,\n      closeButton\n    } = this.props;\n    const {\n      isZoom\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.zoomOrNot,\n        className: \"zoomable-container\",\n        ref: this.containerRef,\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zoomable-sub-container\",\n          children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"zoomable-close-button\",\n            children: closeButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), isZoom && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"zoomable-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Zoomable;","map":{"version":3,"sources":["/home/meddou/projects/perso/meddou.com/src/component/zoomable/Zoomable.jsx"],"names":["React","Component","Zoomable","constructor","containerRef","createRef","transitionDuration","copiedElement","undefined","currentClickListener","scaleFactor","reelElementWidth","reelElementHeight","state","isZoom","zoomOrNot","bind","event","unzoom","zoom","style","transform","firstChild","setTimeout","remove","parentNode","removeChild","setState","stopPropagation","reelElement","current","absolutePosition","getBoundingClientRect","cloneNode","scaledHeight","clientHeight","scaledWidth","clientWidth","self","windowWidth","window","innerWidth","document","documentElement","windowHeight","innerHeight","offsetWidth","classList","add","left","top","height","width","addEventListener","e","preventDefault","removeEventListener","getElementsByTagName","appendChild","render","children","closeButton","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './Zoomable.css'\r\n\r\nclass Zoomable extends Component {\r\n  constructor() {\r\n    super()\r\n    this.containerRef = React.createRef()\r\n\r\n    this.transitionDuration = 300\r\n\r\n    this.copiedElement = undefined\r\n    this.currentClickListener = undefined\r\n    this.scaleFactor = undefined\r\n    this.reelElementWidth = undefined\r\n    this.reelElementHeight = undefined\r\n\r\n    this.state = {\r\n      isZoom: false,\r\n    }\r\n    this.zoomOrNot = this.zoomOrNot.bind(this)\r\n  }\r\n\r\n  zoomOrNot(event) {\r\n    const { isZoom } = this.state\r\n\r\n    if (isZoom) {\r\n      this.unzoom()\r\n    } else {\r\n      this.zoom(event)\r\n    }\r\n  }\r\n\r\n  unzoom() {\r\n    if (this.copiedElement) {\r\n      this.copiedElement.style.transform = 'none'\r\n      this.copiedElement.firstChild.style.transform = 'none'\r\n      setTimeout(() => {\r\n        if (this.copiedElement.remove) {\r\n          this.copiedElement.remove()\r\n        } else if (this.copiedElement.parentNode) {\r\n          this.copiedElement.parentNode.removeChild(this.copiedElement)\r\n        }\r\n      }, this.transitionDuration)\r\n    }\r\n    this.setState({\r\n      isZoom: false,\r\n    })\r\n  }\r\n\r\n  zoom(event) {\r\n    event.stopPropagation()\r\n    const reelElement = this.containerRef.current\r\n    const absolutePosition = reelElement.getBoundingClientRect();\r\n    this.copiedElement = reelElement.cloneNode(true)\r\n    const scaledHeight = reelElement.clientHeight\r\n    const scaledWidth = reelElement.clientWidth\r\n    this.reelElementHeight = reelElement.clientHeight\r\n    this.reelElementWidth = reelElement.clientWidth\r\n    const self = this\r\n\r\n    const windowWidth = window.innerWidth\r\n      || window.innerWidth || document.documentElement.clientWidth\r\n    const windowHeight = window.innerHeight\r\n      || window.innerHeight || document.documentElement.clientHeight\r\n\r\n    this.scaleFactor = (windowWidth * 0.7) / reelElement.offsetWidth\r\n\r\n    this.copiedElement.classList.add('zoomed')\r\n    this.copiedElement.style.left = `${absolutePosition.left}px`\r\n    this.copiedElement.style.top = `${absolutePosition.top}px`\r\n    this.copiedElement.style.height = `${reelElement.clientHeight}px`\r\n    this.copiedElement.style.width = `${reelElement.clientWidth}px`\r\n\r\n    this.currentClickListener = window.addEventListener('click', (e) => {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      window.removeEventListener('click', this)\r\n      self.unzoom()\r\n      return false\r\n    })\r\n\r\n    document.getElementsByTagName('body')[0].appendChild(this.copiedElement)\r\n    this.setState({ isZoom: true })\r\n    setTimeout(() => {\r\n      if (this.copiedElement.firstChild) {\r\n        this.copiedElement.firstChild.style.transform = `scale(${this.scaleFactor})`\r\n      }\r\n\r\n      this.copiedElement.style.transform = `\r\n                translate(\r\n                    calc((${windowWidth / 2}px - ${absolutePosition.left}px - ${scaledWidth / 2}px)),\r\n                    calc((${windowHeight / 2}px - ${absolutePosition.top}px - ${scaledHeight / 2}px))\r\n                )\r\n            `\r\n    }, 0)\r\n  }\r\n\r\n  render() {\r\n    const { children, closeButton } = this.props\r\n    const { isZoom } = this.state\r\n\r\n    return (\r\n      <span>\r\n        <button onClick={this.zoomOrNot} className=\"zoomable-container\" ref={this.containerRef} type=\"submit\">\r\n          <div className=\"zoomable-sub-container\">\r\n            {children}\r\n            <span className=\"zoomable-close-button\">\r\n              {closeButton}\r\n            </span>\r\n          </div>\r\n        </button>\r\n        { isZoom\r\n                && <span className=\"zoomable-background\" />}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Zoomable\r\n"]},"metadata":{},"sourceType":"module"}