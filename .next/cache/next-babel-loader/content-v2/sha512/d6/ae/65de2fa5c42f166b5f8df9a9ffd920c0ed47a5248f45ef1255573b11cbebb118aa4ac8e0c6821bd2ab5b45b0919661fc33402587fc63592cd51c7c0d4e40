{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/meddou/projects/perso/meddou.com/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/meddou/projects/perso/meddou.com/src/pages/ProjectList.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport Location from '../Location';\nimport Projects from '../data/projects.json';\nimport Title from '../component/title/Title';\nimport Project from '../component/project/Project';\nimport ProjectOverlay from '../component/project/ProjectOverlay';\nimport Skill from '../component/skill/Skill';\nimport Row from '../layout/row/Row';\nimport Item from '../layout/item/Item';\nimport BasicPage from './BasicPage';\nimport SkillService from '../services/Skill';\nimport './BasicPage.css';\nimport './ProjectList.css';\n\nvar ProjectListPage = /*#__PURE__*/function (_BasicPage) {\n  _inherits(ProjectListPage, _BasicPage);\n\n  var _super = _createSuper(ProjectListPage);\n\n  function ProjectListPage(props) {\n    var _this;\n\n    _classCallCheck(this, ProjectListPage);\n\n    _this = _super.call(this, props);\n    _this.hasMoreSkill = false;\n    _this.projects = Projects.filter(function (p) {\n      return p.isVisible !== false;\n    });\n    _this.skills = SkillService.getFilterable();\n    _this.filters = [];\n    _this.filtersGroup = ['iOS', 'NodeJS', 'Angular', 'Laravel', 'MongoDB', 'C++'];\n    _this.state = {\n      projects: _this.projects.slice(0),\n      skills: _this.skills.slice(0),\n      selectedProject: undefined\n    };\n    return _this;\n  }\n\n  _createClass(ProjectListPage, [{\n    key: \"addSkillFromQS\",\n    value: function addSkillFromQS() {\n      var paramSkills = Location.qs(this.props.router).skill ? ProjectListPage.skillToArray(Location.qs(this.props.router).skill) : [];\n      var newSkills = this.state.skills.slice(0);\n      var paramSkillObj;\n\n      var skillCmp = function skillCmp(second) {\n        return function (first) {\n          return first.name === second;\n        };\n      };\n\n      if (paramSkills && paramSkills.length > 0) {\n        for (var i = 0; i < paramSkills.length; i += 1) {\n          paramSkillObj = SkillService.getFromName(paramSkills[i]);\n\n          if (newSkills.findIndex(skillCmp(paramSkills[i])) === -1) {\n            if (this.hasMoreSkill === false) {\n              this.filtersGroup.unshift(paramSkills[i]);\n              this.hasMoreSkill = true;\n            }\n\n            newSkills.unshift(paramSkillObj);\n            this.setState({\n              skills: newSkills\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"hasSkills\",\n    value: function hasSkills(toFind) {\n      for (var i = 0; i < toFind.length; i += 1) {\n        if (this.filters.indexOf(toFind[i]) === -1) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"filterFromQS\",\n    value: function filterFromQS() {\n      var needClearFilters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var paramSkills = Location.qs(this.props.router).skill;\n\n      if (paramSkills && !this.hasSkills(ProjectListPage.skillToArray(paramSkills))) {\n        if (needClearFilters) {\n          this.filters = [];\n        }\n\n        this.filterProjects(paramSkills);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.addSkillFromQS();\n      this.filterFromQS();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.addSkillFromQS();\n      this.filterFromQS(true);\n    }\n  }, {\n    key: \"filterProjects\",\n    value: function filterProjects(skill) {\n      var needToUpdateUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var filtered = [];\n      var skills = ProjectListPage.skillToArray(skill);\n      var idx;\n      var isMatching = true;\n\n      for (var k = 0; k < skills.length; k += 1) {\n        idx = this.filters.indexOf(skills[k]);\n\n        if (skills[k] && idx === -1) {\n          this.filters.push(skills[k]);\n        } else if (skills[k]) {\n          this.filters.splice(idx, 1);\n        }\n      }\n\n      for (var i = 0; i < this.projects.length; i += 1) {\n        isMatching = true;\n\n        for (var j = 0; j < this.filters.length; j += 1) {\n          if (this.projects[i].languages.indexOf(this.filters[j]) === -1) {\n            isMatching = false;\n            break;\n          }\n        }\n\n        if (isMatching) {\n          filtered.push(this.projects[i]);\n        }\n      }\n\n      if (needToUpdateUrl) {\n        this.props.router.replace(\"/work?\".concat(this.filters.map(function (f) {\n          return \"skill=\".concat(encodeURIComponent(f));\n        }).join('&')));\n      }\n\n      this.setState({\n        projects: filtered\n      });\n    }\n  }, {\n    key: \"getSkillGrouped\",\n    value: function getSkillGrouped() {\n      var grouped = this.state.skills.slice(0);\n      var groups = [{\n        group: [],\n        id: -1\n      }];\n\n      for (var i = 0; i < grouped.length; i += 1) {\n        groups[groups.length - 1].group.push(grouped[i]);\n\n        if (this.filtersGroup.indexOf(grouped[i].name) !== -1) {\n          groups.push({\n            group: [],\n            id: groups.length\n          });\n        }\n      }\n\n      return groups;\n    }\n  }, {\n    key: \"goToProject\",\n    value: function goToProject(project, e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      this.setState({\n        selectedProject: project\n      }, function () {\n        setTimeout(function () {\n          window.projectListToProjectTransition = true;\n\n          _this2.props.router.push(\"/work/\".concat(project.name), undefined, {\n            shallow: true\n          });\n        }, 500);\n      });\n    }\n  }, {\n    key: \"clearFilters\",\n    value: function clearFilters(e) {\n      e.preventDefault();\n      this.props.router.replace('/work');\n      this.filters = [];\n      this.filterProjects(undefined);\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this3 = this;\n\n      var fakeProjects = new Array(10).map(function (v, idx) {\n        return _objectSpread(_objectSpread({}, _this3.projects[0]), {}, {\n          name: \"fake|\".concat(idx)\n        });\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-basic-page project-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: '64px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            text: \"Mes projets\",\n            noMargin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            marginTop: '16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"filter-container bp-large\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"filter-text\",\n              style: {\n                cursor: \"\".concat(this.filters.length > 0 ? 'pointer' : 'normal')\n              },\n              onClick: this.clearFilters.bind(this),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"subTitle\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    visibility: this.filters.length > 0 ? 'visible' : 'hidden'\n                  },\n                  children: \"(X) \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 17\n                }, this), \"FILTRES\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 13\n            }, this), this.getSkillGrouped().map(function (group) {\n              return /*#__PURE__*/_jsxDEV(Row, {\n                className: \"filter-row\",\n                children: group.group.map(function (skill) {\n                  return /*#__PURE__*/_jsxDEV(Item, {\n                    onClick: function onClick() {\n                      return _this3.filterProjects(skill.name, true);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Skill, {\n                      name: skill.name,\n                      backgroundImage: skill.backgroundImage,\n                      backgroundColor: skill.backgroundColor,\n                      logo: skill.logo,\n                      experience: skill.experience,\n                      isSelected: _this3.filters.indexOf(skill.name) !== -1,\n                      isLittle: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 21\n                    }, _this3)\n                  }, skill.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 19\n                  }, _this3);\n                })\n              }, group.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 15\n              }, _this3);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            center: true,\n            className: \"project-list-container\",\n            children: [this.state.projects.map(function (project) {\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: function onClick(e) {\n                  return _this3.goToProject(project, e);\n                },\n                className: \"project-child-container\",\n                children: /*#__PURE__*/_jsxDEV(Item, {\n                  children: /*#__PURE__*/_jsxDEV(Project, {\n                    backgroundColor: project.backgroundColor,\n                    backgroundImage: project.backgroundImage,\n                    name: project.name,\n                    logo: project.logo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 19\n                  }, _this3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 17\n                }, _this3)\n              }, project.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 15\n              }, _this3);\n            }), this.state.projects.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"no-project-text-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"Pas de projet\",\n                className: \"emoji-container\",\n                children: \"\\uD83D\\uDE25\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"Aucun projet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ProjectOverlay, {\n          inTransition: true,\n          isVisible: !!this.state.selectedProject,\n          backgroundColor: this.state.selectedProject ? this.state.selectedProject.backgroundColor : undefined,\n          logo: this.state.selectedProject ? this.state.selectedProject.logo : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }, this);\n    }\n  }], [{\n    key: \"fmtSkills\",\n    value: function fmtSkills(skill) {\n      if (skill) {\n        if (Array.isArray(skill)) {\n          return skill;\n        }\n\n        return [skill];\n      }\n\n      return [];\n    }\n  }, {\n    key: \"skillToArray\",\n    value: function skillToArray(skill) {\n      var skills = this.fmtSkills(skill);\n      return skills.map(function (mSkill) {\n        return decodeURIComponent(mSkill);\n      });\n    }\n  }]);\n\n  return ProjectListPage;\n}(BasicPage);\n\nexport default _c = withRouter(ProjectListPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/meddou/projects/perso/meddou.com/src/pages/ProjectList.jsx"],"names":["React","withRouter","Location","Projects","Title","Project","ProjectOverlay","Skill","Row","Item","BasicPage","SkillService","ProjectListPage","props","hasMoreSkill","projects","filter","p","isVisible","skills","getFilterable","filters","filtersGroup","state","slice","selectedProject","undefined","paramSkills","qs","router","skill","skillToArray","newSkills","paramSkillObj","skillCmp","second","first","name","length","i","getFromName","findIndex","unshift","setState","toFind","indexOf","needClearFilters","hasSkills","filterProjects","addSkillFromQS","filterFromQS","needToUpdateUrl","filtered","idx","isMatching","k","push","splice","j","languages","replace","map","f","encodeURIComponent","join","grouped","groups","group","id","project","e","preventDefault","setTimeout","window","projectListToProjectTransition","shallow","fakeProjects","Array","v","paddingTop","marginTop","cursor","clearFilters","bind","visibility","getSkillGrouped","backgroundImage","backgroundColor","logo","experience","goToProject","isArray","fmtSkills","mSkill","decodeURIComponent"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'next/router'\r\n\r\nimport Location from '../Location'\r\n\r\nimport Projects from '../data/projects.json'\r\n\r\nimport Title from '../component/title/Title'\r\nimport Project from '../component/project/Project'\r\nimport ProjectOverlay from '../component/project/ProjectOverlay'\r\nimport Skill from '../component/skill/Skill'\r\n\r\nimport Row from '../layout/row/Row'\r\nimport Item from '../layout/item/Item'\r\n\r\nimport BasicPage from './BasicPage'\r\n\r\nimport SkillService from '../services/Skill'\r\n\r\nimport './BasicPage.css'\r\nimport './ProjectList.css'\r\n\r\nclass ProjectListPage extends BasicPage {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.hasMoreSkill = false\r\n\r\n    this.projects = Projects.filter((p) => p.isVisible !== false)\r\n    this.skills = SkillService.getFilterable()\r\n\r\n    this.filters = []\r\n\r\n    this.filtersGroup = ['iOS', 'NodeJS', 'Angular', 'Laravel', 'MongoDB', 'C++']\r\n\r\n    this.state = {\r\n      projects: this.projects.slice(0),\r\n      skills: this.skills.slice(0),\r\n      selectedProject: undefined,\r\n    }\r\n  }\r\n\r\n  addSkillFromQS() {\r\n    const paramSkills = Location.qs(this.props.router).skill ? ProjectListPage.skillToArray(Location.qs(this.props.router).skill) : []\r\n    const newSkills = this.state.skills.slice(0)\r\n\r\n    let paramSkillObj\r\n\r\n    const skillCmp = (second) => (first) => first.name === second\r\n\r\n    if (paramSkills && paramSkills.length > 0) {\r\n      for (let i = 0; i < paramSkills.length; i += 1) {\r\n        paramSkillObj = SkillService.getFromName(paramSkills[i])\r\n\r\n        if (newSkills.findIndex(skillCmp(paramSkills[i])) === -1) {\r\n          if (this.hasMoreSkill === false) {\r\n            this.filtersGroup.unshift(paramSkills[i])\r\n            this.hasMoreSkill = true\r\n          }\r\n          newSkills.unshift(paramSkillObj)\r\n          this.setState({\r\n            skills: newSkills,\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  hasSkills(toFind) {\r\n    for (let i = 0; i < toFind.length; i += 1) {\r\n      if (this.filters.indexOf(toFind[i]) === -1) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  filterFromQS(needClearFilters = false) {\r\n    const paramSkills = Location.qs(this.props.router).skill\r\n\r\n    if (paramSkills && !this.hasSkills(ProjectListPage.skillToArray(paramSkills))) {\r\n      if (needClearFilters) {\r\n        this.filters = []\r\n      }\r\n      this.filterProjects(paramSkills)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.addSkillFromQS()\r\n    this.filterFromQS()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.addSkillFromQS()\r\n    this.filterFromQS(true)\r\n  }\r\n\r\n  static fmtSkills(skill) {\r\n    if (skill) {\r\n      if (Array.isArray(skill)) {\r\n        return skill\r\n      }\r\n\r\n      return [skill]\r\n    }\r\n    return []\r\n  }\r\n\r\n  static skillToArray(skill) {\r\n    const skills = this.fmtSkills(skill)\r\n    return skills.map((mSkill) => decodeURIComponent(mSkill))\r\n  }\r\n\r\n  filterProjects(skill, needToUpdateUrl = false) {\r\n    const filtered = []\r\n    const skills = ProjectListPage.skillToArray(skill)\r\n    let idx\r\n    let isMatching = true\r\n\r\n    for (let k = 0; k < skills.length; k += 1) {\r\n      idx = this.filters.indexOf(skills[k])\r\n      if (skills[k] && idx === -1) {\r\n        this.filters.push(skills[k])\r\n      } else if (skills[k]) {\r\n        this.filters.splice(idx, 1)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.projects.length; i += 1) {\r\n      isMatching = true\r\n      for (let j = 0; j < this.filters.length; j += 1) {\r\n        if (this.projects[i].languages.indexOf(this.filters[j]) === -1) {\r\n          isMatching = false\r\n          break\r\n        }\r\n      }\r\n      if (isMatching) {\r\n        filtered.push(this.projects[i])\r\n      }\r\n    }\r\n    if (needToUpdateUrl) {\r\n      this.props.router.replace(`/work?${this.filters.map((f) => `skill=${encodeURIComponent(f)}`).join('&')}`)\r\n    }\r\n    this.setState({\r\n      projects: filtered,\r\n    })\r\n  }\r\n\r\n  getSkillGrouped() {\r\n    const grouped = this.state.skills.slice(0)\r\n    const groups = [{ group: [], id: -1 }]\r\n\r\n    for (let i = 0; i < grouped.length; i += 1) {\r\n      groups[groups.length - 1].group.push(grouped[i])\r\n      if (this.filtersGroup.indexOf(grouped[i].name) !== -1) {\r\n        groups.push({ group: [], id: groups.length })\r\n      }\r\n    }\r\n\r\n    return groups\r\n  }\r\n\r\n  goToProject(project, e) {\r\n    e.preventDefault()\r\n    this.setState({\r\n      selectedProject: project,\r\n    }, () => {\r\n      setTimeout(() => {\r\n        window.projectListToProjectTransition = true\r\n        this.props.router.push(`/work/${project.name}`, undefined, { shallow: true })\r\n      }, 500)\r\n    })\r\n  }\r\n\r\n  clearFilters(e) {\r\n    e.preventDefault()\r\n    this.props.router.replace('/work')\r\n    this.filters = []\r\n    this.filterProjects(undefined)\r\n  }\r\n\r\n  renderContent() {\r\n    const fakeProjects = new Array(10).map((v, idx) => ({\r\n      ...this.projects[0],\r\n      name: `fake|${idx}`,\r\n    }))\r\n\r\n    return (\r\n      <div className=\"sub-basic-page project-list-container\">\r\n        <div className=\"project-background\" />\r\n\r\n        <div style={{ paddingTop: '64px' }}>\r\n          <Title text=\"Mes projets\" noMargin />\r\n        </div>\r\n        <Row style={{ marginTop: '16px' }}>\r\n          <Row className=\"filter-container bp-large\">\r\n            <button type=\"submit\" className=\"filter-text\" style={{ cursor: `${this.filters.length > 0 ? 'pointer' : 'normal'}` }} onClick={this.clearFilters.bind(this)}>\r\n              <span className=\"subTitle\">\r\n                <span style={{ visibility: this.filters.length > 0 ? 'visible' : 'hidden' }}>(X) </span>\r\n                FILTRES\r\n              </span>\r\n            </button>\r\n            { this.getSkillGrouped().map((group) => (\r\n              <Row className=\"filter-row\" key={group.id}>\r\n                {group.group.map((skill) => (\r\n                  <Item key={skill.name} onClick={() => this.filterProjects(skill.name, true)}>\r\n                    <Skill\r\n                      name={skill.name}\r\n                      backgroundImage={skill.backgroundImage}\r\n                      backgroundColor={skill.backgroundColor}\r\n                      logo={skill.logo}\r\n                      experience={skill.experience}\r\n                      isSelected={this.filters.indexOf(skill.name) !== -1}\r\n                      isLittle\r\n                    />\r\n                  </Item>\r\n                ))}\r\n              </Row>\r\n            ))}\r\n          </Row>\r\n\r\n          <Row center className=\"project-list-container\">\r\n            { this.state.projects.map((project) => (\r\n              <button type=\"submit\" onClick={(e) => this.goToProject(project, e)} key={project.name} className=\"project-child-container\">\r\n                <Item>\r\n                  <Project\r\n                    backgroundColor={project.backgroundColor}\r\n                    backgroundImage={project.backgroundImage}\r\n                    name={project.name}\r\n                    logo={project.logo}\r\n                  />\r\n                </Item>\r\n              </button>\r\n            ))}\r\n            { this.state.projects.length === 0 && (\r\n              <span className=\"no-project-text-container\">\r\n                <span role=\"img\" aria-label=\"Pas de projet\" className=\"emoji-container\">😥</span>\r\n                <sub>Aucun projet</sub>\r\n              </span>\r\n            )}\r\n          </Row>\r\n        </Row>\r\n        <ProjectOverlay\r\n          inTransition\r\n          isVisible={!!this.state.selectedProject}\r\n          backgroundColor={\r\n            this.state.selectedProject ? this.state.selectedProject.backgroundColor : undefined\r\n          }\r\n          logo={this.state.selectedProject ? this.state.selectedProject.logo : undefined}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ProjectListPage)\r\n"]},"metadata":{},"sourceType":"module"}