{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Mehdi/projects/perso/meddou.com/meddou.com/component/section/ProjectList.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Location from '../helpers/Location';\nimport Projects from '../../data/projects.json';\nimport Title from './title/Title';\nimport Project from './project/Project';\nimport ProjectOverlay from './project/ProjectOverlay';\nimport Skill from './skill/Skill';\nimport Row from '../../layout/row/Row';\nimport Item from '../../layout/item/Item';\nimport BasicPage from './BasicPage';\nimport SkillService from '../../services/Skill';\nimport './BasicPage.css';\nimport './ProjectList.css';\n\nclass ProjectListPage extends BasicPage {\n  constructor(props) {\n    super(props);\n    this.hasMoreSkill = false;\n    this.projects = Projects.filter(p => p.isVisible !== false);\n    this.skills = SkillService.getFilterable();\n    this.filters = [];\n    this.filtersGroup = [\"iOS\", \"NodeJS\", \"Angular\", \"Laravel\", \"MongoDB\", \"C++\"];\n    this.state = {\n      projects: this.projects.slice(0),\n      skills: this.skills.slice(0),\n      selectedProject: undefined\n    };\n    this.addSkillFromQS();\n  }\n\n  addSkillFromQS() {\n    const paramSkills = Location.qs().skill ? this.skillToArray(Location.qs().skill) : [];\n    let newSkills = this.state.skills.slice(0);\n    let paramSkillObj = undefined;\n\n    const skillCmp = second => {\n      return first => first.name === second;\n    };\n\n    if (paramSkills && paramSkills.length > 0) {\n      for (var i = 0; i < paramSkills.length; i++) {\n        paramSkillObj = SkillService.getFromName(paramSkills[i]);\n\n        if (newSkills.findIndex(skillCmp(paramSkills[i])) === -1) {\n          if (this.hasMoreSkill === false) {\n            this.filtersGroup.unshift(paramSkills[i]);\n            this.hasMoreSkill = true;\n          }\n\n          newSkills.unshift(paramSkillObj);\n          this.setState({\n            skills: newSkills\n          });\n        }\n      }\n    }\n  }\n\n  hasSkills(toFind) {\n    for (var i = 0; i < toFind.length; i++) {\n      if (this.filters.indexOf(toFind[i]) === -1) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  filterFromQS(needClearFilters = false) {\n    const paramSkills = Location.qs().skill;\n\n    if (paramSkills && !this.hasSkills(this.skillToArray(paramSkills))) {\n      if (needClearFilters) {\n        this.filters = [];\n      }\n\n      this.filterProjects(paramSkills);\n    }\n  }\n\n  componentDidMount() {\n    this.filterFromQS();\n  }\n\n  componentDidUpdate() {\n    this.addSkillFromQS();\n    this.filterFromQS(true);\n  }\n\n  skillToArray(skill) {\n    const skills = skill ? Array.isArray(skill) ? skill : [skill] : [];\n    return skills.map(skill => decodeURIComponent(skill));\n  }\n\n  filterProjects(skill, needToUpdateUrl = false) {\n    let filtered = [];\n    let idx = undefined;\n    let isMatching = true;\n    let skills = this.skillToArray(skill);\n\n    for (var k = 0; k < skills.length; k++) {\n      idx = this.filters.indexOf(skills[k]);\n\n      if (skills[k] && idx === -1) {\n        this.filters.push(skills[k]);\n      } else if (skills[k]) {\n        this.filters.splice(idx, 1);\n      }\n    }\n\n    for (var i = 0; i < this.projects.length; i++) {\n      isMatching = true;\n\n      for (var j = 0; j < this.filters.length; j++) {\n        if (this.projects[i].languages.indexOf(this.filters[j]) === -1) {\n          isMatching = false;\n          break;\n        }\n      }\n\n      if (isMatching) {\n        filtered.push(this.projects[i]);\n      }\n    }\n\n    if (needToUpdateUrl) {\n      this.props.history.replace(`/work?${this.filters.map(f => 'skill=' + encodeURIComponent(f)).join('&')}`);\n    }\n\n    this.setState({\n      projects: filtered\n    });\n  }\n\n  getSkillGrouped() {\n    let grouped = this.state.skills.slice(0);\n    let groups = [{\n      group: [],\n      id: -1\n    }];\n\n    for (var i = 0; i < grouped.length; i++) {\n      groups[groups.length - 1].group.push(grouped[i]);\n\n      if (this.filtersGroup.indexOf(grouped[i].name) !== -1) {\n        groups.push({\n          group: [],\n          id: groups.length\n        });\n      }\n    }\n\n    return groups;\n  }\n\n  goToProject(project, e) {\n    e.preventDefault();\n    this.setState({\n      selectedProject: project\n    }, () => {\n      setTimeout(() => {\n        window._projectListToProjectTrasition = true;\n        this.props.history.push(`/work/${project.name}`);\n      }, 500);\n    });\n  }\n\n  clearFilters(e) {\n    e.preventDefault();\n    this.props.history.replace(`/work`);\n    this.filters = [];\n    this.filterProjects(undefined);\n  }\n\n  renderContent() {\n    const fakeProjects = new Array(10).map((v, idx) => {\n      return _objectSpread(_objectSpread({}, this.projects[0]), {}, {\n        name: `fake|${idx}`\n      });\n    });\n    return __jsx(\"div\", {\n      className: \"sub-basic-page project-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"project-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      style: {\n        paddingTop: '64px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, __jsx(Title, {\n      text: \"Mes projets\",\n      noMargin: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    })), __jsx(Row, {\n      style: {\n        marginTop: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      className: \"filter-container bp-large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"filter-text\",\n      style: {\n        cursor: `${this.filters.length > 0 ? 'pointer' : 'normal'}`\n      },\n      onClick: this.clearFilters.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"subTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      style: {\n        visibility: this.filters.length > 0 ? 'visible' : 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, \"(X) \"), \"FILTRES\")), this.getSkillGrouped().map(group => __jsx(Row, {\n      className: \"filter-row\",\n      key: group.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, group.group.map(skill => __jsx(Item, {\n      key: skill.name,\n      onClick: () => this.filterProjects(skill.name, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, __jsx(Skill, {\n      name: skill.name,\n      backgroundImage: skill.backgroundImage,\n      backgroundColor: skill.backgroundColor,\n      logo: skill.logo,\n      experience: skill.experience,\n      isSelected: this.filters.indexOf(skill.name) !== -1,\n      isLittle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    })))))), __jsx(Row, {\n      center: true,\n      className: \"project-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, this.state.projects.map(project => __jsx(\"button\", {\n      type: \"submit\",\n      onClick: e => this.goToProject(project, e),\n      key: project.name,\n      className: \"project-child-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, __jsx(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, __jsx(Project, {\n      backgroundColor: project.backgroundColor,\n      backgroundImage: project.backgroundImage,\n      name: project.name,\n      logo: project.logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    })))), this.state.projects.length === 0 && __jsx(\"span\", {\n      className: \"no-project-text-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"No project\",\n      className: \"emoji-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, \"\\uD83D\\uDE25\"), __jsx(\"sub\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, \"Aucun projet\")), fakeProjects.map(project => __jsx(\"span\", {\n      style: {\n        visibility: 'hidden',\n        height: '0'\n      },\n      key: project.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, __jsx(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, __jsx(Project, {\n      backgroundColor: project.backgroundColor,\n      backgroundImage: project.backgroundImage,\n      name: project.name,\n      logo: project.logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    })))))), __jsx(ProjectOverlay, {\n      in: true,\n      isVisible: !!this.state.selectedProject,\n      backgroundColor: this.state.selectedProject ? this.state.selectedProject.backgroundColor : undefined,\n      logo: this.state.selectedProject ? this.state.selectedProject.logo : undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(ProjectListPage);","map":{"version":3,"sources":["/mnt/c/Users/Mehdi/projects/perso/meddou.com/meddou.com/component/section/ProjectList.jsx"],"names":["React","withRouter","Location","Projects","Title","Project","ProjectOverlay","Skill","Row","Item","BasicPage","SkillService","ProjectListPage","constructor","props","hasMoreSkill","projects","filter","p","isVisible","skills","getFilterable","filters","filtersGroup","state","slice","selectedProject","undefined","addSkillFromQS","paramSkills","qs","skill","skillToArray","newSkills","paramSkillObj","skillCmp","second","first","name","length","i","getFromName","findIndex","unshift","setState","hasSkills","toFind","indexOf","filterFromQS","needClearFilters","filterProjects","componentDidMount","componentDidUpdate","Array","isArray","map","decodeURIComponent","needToUpdateUrl","filtered","idx","isMatching","k","push","splice","j","languages","history","replace","f","encodeURIComponent","join","getSkillGrouped","grouped","groups","group","id","goToProject","project","e","preventDefault","setTimeout","window","_projectListToProjectTrasition","clearFilters","renderContent","fakeProjects","v","paddingTop","marginTop","cursor","bind","visibility","backgroundImage","backgroundColor","logo","experience","height"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport Location from '../helpers/Location'\r\n\r\nimport Projects from '../../data/projects.json'\r\n\r\nimport Title from './title/Title'\r\nimport Project from './project/Project'\r\nimport ProjectOverlay from './project/ProjectOverlay'\r\nimport Skill from './skill/Skill'\r\n\r\nimport Row from '../../layout/row/Row'\r\nimport Item from '../../layout/item/Item'\r\n\r\nimport BasicPage from './BasicPage'\r\n\r\nimport SkillService from '../../services/Skill'\r\n\r\nimport './BasicPage.css'\r\nimport './ProjectList.css'\r\n\r\nclass ProjectListPage extends BasicPage {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.hasMoreSkill = false\r\n\r\n    this.projects = Projects.filter(p => p.isVisible !== false)\r\n    this.skills = SkillService.getFilterable()\r\n  \r\n    this.filters = []\r\n  \r\n    this.filtersGroup = [\"iOS\", \"NodeJS\", \"Angular\", \"Laravel\", \"MongoDB\", \"C++\"]\r\n\r\n    this.state = {\r\n      projects: this.projects.slice(0),\r\n      skills: this.skills.slice(0),\r\n      selectedProject: undefined\r\n    }\r\n\r\n    this.addSkillFromQS()\r\n  }\r\n\r\n  addSkillFromQS() {\r\n    const paramSkills = Location.qs().skill ? this.skillToArray(Location.qs().skill) : []\r\n    let newSkills = this.state.skills.slice(0)\r\n\r\n    let paramSkillObj = undefined\r\n\r\n    const skillCmp = (second) => {\r\n      return (first) => first.name === second\r\n    }\r\n\r\n    if (paramSkills && paramSkills.length > 0) {\r\n      for (var i = 0; i < paramSkills.length; i++) {\r\n        paramSkillObj = SkillService.getFromName(paramSkills[i])\r\n\r\n        if (newSkills.findIndex(skillCmp(paramSkills[i])) ===-1) {\r\n          if (this.hasMoreSkill === false) {\r\n            this.filtersGroup.unshift(paramSkills[i])\r\n            this.hasMoreSkill = true\r\n          }\r\n          newSkills.unshift(paramSkillObj)\r\n          this.setState({\r\n            skills: newSkills\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  hasSkills(toFind) {\r\n    for (var i = 0; i < toFind.length; i++) {\r\n      if (this.filters.indexOf(toFind[i]) === -1) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n\r\n  filterFromQS(needClearFilters = false) {\r\n    const paramSkills = Location.qs().skill\r\n\r\n    if (paramSkills && !this.hasSkills(this.skillToArray(paramSkills))) {\r\n      if (needClearFilters) {\r\n        this.filters = []\r\n      }\r\n      this.filterProjects(paramSkills)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.filterFromQS()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.addSkillFromQS()\r\n    this.filterFromQS(true)\r\n  }\r\n\r\n  skillToArray(skill) {\r\n    const skills = skill ? (Array.isArray(skill) ? skill : [skill]) : []\r\n    return skills.map(skill => decodeURIComponent(skill))\r\n  }\r\n\r\n  filterProjects(skill, needToUpdateUrl = false) {\r\n    let filtered = []\r\n    let idx = undefined\r\n    let isMatching = true\r\n    let skills = this.skillToArray(skill)\r\n\r\n    for (var k = 0; k < skills.length; k++) {\r\n      idx = this.filters.indexOf(skills[k])\r\n      if (skills[k] && idx === -1) {\r\n        this.filters.push(skills[k])\r\n      } else if (skills[k]) {\r\n        this.filters.splice(idx, 1)\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < this.projects.length; i++) {\r\n      isMatching = true\r\n      for (var j = 0; j < this.filters.length; j++) {\r\n        if (this.projects[i].languages.indexOf(this.filters[j]) === -1) {\r\n          isMatching = false\r\n          break\r\n        }\r\n      }\r\n      if (isMatching) {\r\n        filtered.push(this.projects[i])\r\n      }\r\n    }\r\n    if (needToUpdateUrl) {\r\n      this.props.history.replace(`/work?${this.filters.map(f => 'skill=' + encodeURIComponent(f)).join('&')}`)\r\n    }\r\n    this.setState({\r\n      projects: filtered\r\n    })\r\n  }\r\n\r\n  getSkillGrouped() {\r\n    let grouped = this.state.skills.slice(0)\r\n    let groups = [{group: [], id: -1}]\r\n\r\n    for (var i = 0; i < grouped.length; i++) {\r\n      groups[groups.length - 1].group.push(grouped[i])\r\n      if (this.filtersGroup.indexOf(grouped[i].name) !== -1) {\r\n        groups.push({group: [], id: groups.length})\r\n      }\r\n    }\r\n\r\n    return groups\r\n  }\r\n\r\n  goToProject(project, e) {\r\n    e.preventDefault()\r\n    this.setState({\r\n      selectedProject: project\r\n    }, () => {\r\n      setTimeout(() => {\r\n        window._projectListToProjectTrasition = true\r\n        this.props.history.push(`/work/${project.name}`)\r\n      }, 500)\r\n    })\r\n  }\r\n\r\n  clearFilters(e) {\r\n    e.preventDefault()\r\n    this.props.history.replace(`/work`)\r\n    this.filters = []\r\n    this.filterProjects(undefined)\r\n  }\r\n\r\n  renderContent() {\r\n    const fakeProjects = new Array(10).map((v, idx) => {\r\n      return {\r\n        ...this.projects[0],\r\n        name: `fake|${idx}`\r\n      }\r\n    })\r\n\r\n    return (\r\n      <div className=\"sub-basic-page project-list-container\">\r\n        <div className=\"project-background\" />\r\n\r\n        <div style={{paddingTop: '64px'}}>\r\n          <Title text='Mes projets' noMargin />\r\n        </div>\r\n        <Row style={{marginTop: '16px'}}>\r\n          <Row className=\"filter-container bp-large\">\r\n            <button type=\"submit\" className=\"filter-text\" style={{cursor: `${this.filters.length > 0 ? 'pointer' : 'normal'}`}} onClick={this.clearFilters.bind(this)}>\r\n              <span className=\"subTitle\">\r\n                <span style={{visibility: this.filters.length > 0 ? 'visible' : 'hidden'}}>(X) </span>\r\n                FILTRES\r\n              </span>\r\n            </button>\r\n            { this.getSkillGrouped().map((group) => (\r\n              <Row className=\"filter-row\" key={group.id}>\r\n                {group.group.map((skill) => (\r\n                  <Item key={skill.name} onClick={() => this.filterProjects(skill.name, true)}>\r\n                    <Skill\r\n                      name={skill.name}\r\n                      backgroundImage={skill.backgroundImage}\r\n                      backgroundColor={skill.backgroundColor}\r\n                      logo={skill.logo}\r\n                      experience={skill.experience}\r\n                      isSelected={this.filters.indexOf(skill.name) !== -1}\r\n                      isLittle\r\n                    />\r\n                  </Item>\r\n                ))}\r\n              </Row>\r\n            ))}\r\n          </Row>\r\n\r\n          <Row center className=\"project-list-container\">\r\n            { this.state.projects.map(project => (\r\n              <button type=\"submit\" onClick={(e) => this.goToProject(project, e)} key={project.name} className=\"project-child-container\">\r\n                <Item>\r\n                  <Project\r\n                    backgroundColor={project.backgroundColor}\r\n                    backgroundImage={project.backgroundImage}\r\n                    name={project.name}\r\n                    logo={project.logo}\r\n                  />\r\n                </Item>\r\n              </button>\r\n            ))}\r\n            { this.state.projects.length  === 0 && (\r\n              <span className=\"no-project-text-container\">\r\n                <span role=\"img\" aria-label=\"No project\" className=\"emoji-container\">😥</span>\r\n                <sub>Aucun projet</sub>\r\n              </span>\r\n            )}\r\n            { fakeProjects.map((project) => (\r\n              <span style={{visibility: 'hidden', height: '0'}} key={project.name}>\r\n                <Item>\r\n                  <Project\r\n                    backgroundColor={project.backgroundColor}\r\n                    backgroundImage={project.backgroundImage}\r\n                    name={project.name}\r\n                    logo={project.logo}\r\n                  />\r\n                </Item>\r\n              </span>\r\n            ))}\r\n          </Row>\r\n        </Row>\r\n        <ProjectOverlay\r\n          in\r\n          isVisible={!!this.state.selectedProject}\r\n          backgroundColor={this.state.selectedProject ? this.state.selectedProject.backgroundColor : undefined}\r\n          logo={this.state.selectedProject ? this.state.selectedProject.logo : undefined}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ProjectListPage)\r\n"]},"metadata":{},"sourceType":"module"}