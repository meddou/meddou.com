{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Mehdi/projects/perso/meddou.com/meddou.com/component/scrollable-row/ScrollableRow.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Row from '../../layout/row/Row';\n\nclass ScrollableRow extends Component {\n  constructor(props) {\n    super(props);\n    this.elementRefs = [];\n    this.index = 1;\n    this.containerRef = React.createRef();\n    this.intervalId = undefined;\n\n    for (var i = 0; i < this.props.children.length; i++) {\n      this.elementRefs.push(React.createRef());\n    }\n  }\n\n  componentDidMount() {\n    let direction = 1;\n\n    if (this.props.step) {\n      this.intervalId = setInterval(() => {\n        this.containerRef.scrollBy({\n          left: this.props.step * direction,\n          behavior: 'smooth'\n        });\n\n        if (direction === 1 && this.containerRef.scrollLeft + this.containerRef.clientWidth >= this.containerRef.scrollWidth || direction === -1 && this.containerRef.scrollLeft === 0) {\n          direction *= -1;\n        }\n      }, 1500);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  render() {\n    return __jsx(Row, {\n      style: this.props.style,\n      customRef: ref => this.containerRef = ref,\n      noWrap: true,\n      className: this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, this.props.children.map((child, idx) => __jsx(\"span\", {\n      ref: this.elementRefs[idx],\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, child)));\n  }\n\n}\n\nexport default ScrollableRow;","map":{"version":3,"sources":["/mnt/c/Users/Mehdi/projects/perso/meddou.com/meddou.com/component/scrollable-row/ScrollableRow.jsx"],"names":["React","Component","Row","ScrollableRow","constructor","props","elementRefs","index","containerRef","createRef","intervalId","undefined","i","children","length","push","componentDidMount","direction","step","setInterval","scrollBy","left","behavior","scrollLeft","clientWidth","scrollWidth","componentWillUnmount","clearInterval","render","style","ref","className","map","child","idx"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,WAAL,GAAmB,EAAnB;AAEA,SAAKC,KAAL,GAAa,CAAb;AAEA,SAAKC,YAAL,GAAoBR,KAAK,CAACS,SAAN,EAApB;AAEA,SAAKC,UAAL,GAAkBC,SAAlB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,MAAxC,EAAgDF,CAAC,EAAjD,EAAqD;AACnD,WAAKN,WAAL,CAAiBS,IAAjB,CAAsBf,KAAK,CAACS,SAAN,EAAtB;AACD;AACF;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,SAAS,GAAG,CAAhB;;AAEA,QAAI,KAAKZ,KAAL,CAAWa,IAAf,EAAqB;AACnB,WAAKR,UAAL,GAAkBS,WAAW,CAAC,MAAM;AAClC,aAAKX,YAAL,CAAkBY,QAAlB,CAA2B;AAACC,UAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWa,IAAX,GAAkBD,SAAzB;AAAoCK,UAAAA,QAAQ,EAAE;AAA9C,SAA3B;;AACA,YAAKL,SAAS,KAAK,CAAd,IAAmB,KAAKT,YAAL,CAAkBe,UAAlB,GAA+B,KAAKf,YAAL,CAAkBgB,WAAjD,IAAgE,KAAKhB,YAAL,CAAkBiB,WAAtG,IACAR,SAAS,KAAK,CAAC,CAAf,IAAoB,KAAKT,YAAL,CAAkBe,UAAlB,KAAiC,CADzD,EAC6D;AAC3DN,UAAAA,SAAS,IAAI,CAAC,CAAd;AACD;AACF,OAN4B,EAM1B,IAN0B,CAA7B;AAOD;AACJ;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKhB,UAAT,EAAqB;AACnBiB,MAAAA,aAAa,CAAC,KAAKjB,UAAN,CAAb;AACD;AACF;;AAEDkB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWwB,KAAvB;AAA8B,MAAA,SAAS,EAAEC,GAAG,IAAK,KAAKtB,YAAL,GAAoBsB,GAArE;AAA2E,MAAA,MAAM,MAAjF;AAAkF,MAAA,SAAS,EAAE,KAAKzB,KAAL,CAAW0B,SAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK1B,KAAL,CAAWQ,QAAX,CAAoBmB,GAApB,CAAwB,CAACC,KAAD,EAAQC,GAAR,KACvB;AAAM,MAAA,GAAG,EAAE,KAAK5B,WAAL,CAAiB4B,GAAjB,CAAX;AAAkC,MAAA,GAAG,EAAEA,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KADH,CADD,CADH,CADF;AASD;;AA/CmC;;AAkDtC,eAAe9B,aAAf","sourcesContent":["import React, {Component} from 'react'\r\n\r\nimport Row from '../../layout/row/Row'\r\n\r\nclass ScrollableRow extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.elementRefs = []\r\n\r\n    this.index = 1\r\n  \r\n    this.containerRef = React.createRef()\r\n  \r\n    this.intervalId = undefined\r\n\r\n    for (var i = 0; i < this.props.children.length; i++) {\r\n      this.elementRefs.push(React.createRef())\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      let direction = 1\r\n\r\n      if (this.props.step) {\r\n        this.intervalId = setInterval(() => {\r\n          this.containerRef.scrollBy({left: this.props.step * direction, behavior: 'smooth'})            \r\n          if ((direction === 1 && this.containerRef.scrollLeft + this.containerRef.clientWidth >= this.containerRef.scrollWidth)\r\n          || (direction === -1 && this.containerRef.scrollLeft === 0)) {\r\n            direction *= -1\r\n          }\r\n        }, 1500)\r\n      }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row style={this.props.style} customRef={ref => (this.containerRef = ref)} noWrap className={this.props.className}>\r\n        {this.props.children.map((child, idx) => (\r\n          <span ref={this.elementRefs[idx]} key={idx}>\r\n            {child}\r\n          </span>\r\n        ))}\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScrollableRow\r\n"]},"metadata":{},"sourceType":"module"}