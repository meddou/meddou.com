{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Mehdi/projects/perso/meddou.com/meddou.com/component/zoomable/Zoomable.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport './Zoomable.css';\n\nclass Zoomable extends Component {\n  constructor() {\n    super();\n    this.containerRef = React.createRef();\n    this.transitionDuration = 300;\n    this.copiedElement = undefined;\n    this.currentClickListener = undefined;\n    this.scaleFactor = undefined;\n    this.reelElementWidth = undefined;\n    this.reelElementHeight = undefined;\n    this.state = {\n      isZoom: false\n    };\n  }\n\n  zoomOrNot(event) {\n    const isZoom = this.state.isZoom;\n\n    if (isZoom) {\n      this.unzoom();\n    } else {\n      this.zoom(event);\n    }\n  }\n\n  unzoom() {\n    if (this.copiedElement) {\n      this.copiedElement.style.transform = 'none';\n      this.copiedElement.firstChild.style.transform = 'none';\n      setTimeout(() => {\n        if (this.copiedElement.remove) {\n          this.copiedElement.remove();\n        } else if (this.copiedElement.parentNode) {\n          this.copiedElement.parentNode.removeChild(this.copiedElement);\n        }\n      }, this.transitionDuration);\n    }\n\n    this.setState({\n      isZoom: false\n    });\n  }\n\n  zoom(event) {\n    event.stopPropagation();\n    const reelElement = this.containerRef.current;\n    const absolutePosition = reelElement.getBoundingClientRect();\n    this.copiedElement = reelElement.cloneNode(true);\n    const scaledHeight = reelElement.clientHeight;\n    const scaledWidth = reelElement.clientWidth;\n    this.reelElementHeight = reelElement.clientHeight;\n    this.reelElementWidth = reelElement.clientWidth;\n    let self = this;\n    const windowWidth = window.innerWidth || window.innerWidth || document.documentElement.clientWidth;\n    const windowHeight = window.innerHeight || window.innerHeight || document.documentElement.clientHeight;\n    this.scaleFactor = windowWidth * 0.7 / reelElement.offsetWidth;\n    this.copiedElement.classList.add('zoomed');\n    this.copiedElement.style.left = absolutePosition.left + 'px';\n    this.copiedElement.style.top = absolutePosition.top + 'px';\n    this.copiedElement.style.height = reelElement.clientHeight + 'px';\n    this.copiedElement.style.width = reelElement.clientWidth + 'px';\n    this.currentClickListener = window.addEventListener('click', function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      window.removeEventListener('click', this);\n      self.unzoom();\n      return false;\n    });\n    document.getElementsByTagName('body')[0].appendChild(this.copiedElement);\n    this.setState({\n      isZoom: true\n    });\n    setTimeout(() => {\n      if (this.copiedElement.firstChild) {\n        this.copiedElement.firstChild.style.transform = \"scale(\".concat(this.scaleFactor, \")\");\n      }\n\n      this.copiedElement.style.transform = \"\\n                translate(\\n                    calc((\".concat(windowWidth / 2, \"px - \").concat(absolutePosition.left, \"px - \").concat(scaledWidth / 2, \"px)),\\n                    calc((\").concat(windowHeight / 2, \"px - \").concat(absolutePosition.top, \"px - \").concat(scaledHeight / 2, \"px))\\n                )\\n            \");\n    }, 0);\n  }\n\n  render() {\n    return __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      onClick: this.zoomOrNot.bind(this),\n      className: \"zoomable-container\",\n      ref: this.containerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"zoomable-sub-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, this.props.children, __jsx(\"span\", {\n      className: \"zoomable-close-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, this.props.closeButton))), this.state.isZoom && __jsx(\"span\", {\n      className: \"zoomable-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Zoomable;","map":{"version":3,"sources":["/mnt/c/Users/Mehdi/projects/perso/meddou.com/meddou.com/component/zoomable/Zoomable.jsx"],"names":["React","Component","Zoomable","constructor","containerRef","createRef","transitionDuration","copiedElement","undefined","currentClickListener","scaleFactor","reelElementWidth","reelElementHeight","state","isZoom","zoomOrNot","event","unzoom","zoom","style","transform","firstChild","setTimeout","remove","parentNode","removeChild","setState","stopPropagation","reelElement","current","absolutePosition","getBoundingClientRect","cloneNode","scaledHeight","clientHeight","scaledWidth","clientWidth","self","windowWidth","window","innerWidth","document","documentElement","windowHeight","innerHeight","offsetWidth","classList","add","left","top","height","width","addEventListener","e","preventDefault","removeEventListener","getElementsByTagName","appendChild","render","bind","props","children","closeButton"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\n\r\nimport './Zoomable.css'\r\n\r\nclass Zoomable extends Component {\r\n    constructor() {\r\n        super()\r\n        this.containerRef = React.createRef()\r\n\r\n        this.transitionDuration = 300\r\n    \r\n        this.copiedElement = undefined\r\n        this.currentClickListener = undefined\r\n        this.scaleFactor = undefined\r\n        this.reelElementWidth = undefined\r\n        this.reelElementHeight = undefined\r\n    \r\n        this.state = {\r\n            isZoom: false\r\n        }\r\n    }\r\n\r\n    zoomOrNot(event) {\r\n        const {isZoom} = this.state\r\n\r\n        if (isZoom) {\r\n            this.unzoom()\r\n        } else {\r\n            this.zoom(event)\r\n        }\r\n    }\r\n\r\n    unzoom() {\r\n        if (this.copiedElement) {\r\n            this.copiedElement.style.transform = 'none'\r\n            this.copiedElement.firstChild.style.transform = 'none'\r\n            setTimeout(() => {\r\n                if (this.copiedElement.remove) {\r\n                    this.copiedElement.remove()\r\n                } else if (this.copiedElement.parentNode) {\r\n                    this.copiedElement.parentNode.removeChild(this.copiedElement)\r\n                }\r\n            }, this.transitionDuration)\r\n        }\r\n        this.setState({\r\n            isZoom: false\r\n        })\r\n    }\r\n\r\n    zoom (event) {\r\n        event.stopPropagation()\r\n        const reelElement = this.containerRef.current\r\n        const absolutePosition = reelElement.getBoundingClientRect();\r\n        this.copiedElement = reelElement.cloneNode(true)\r\n        const scaledHeight = reelElement.clientHeight\r\n        const scaledWidth = reelElement.clientWidth\r\n        this.reelElementHeight = reelElement.clientHeight\r\n        this.reelElementWidth = reelElement.clientWidth\r\n        let self = this\r\n\r\n        const windowWidth = window.innerWidth || window.innerWidth || document.documentElement.clientWidth\r\n        const windowHeight = window.innerHeight || window.innerHeight || document.documentElement.clientHeight\r\n\r\n        this.scaleFactor = (windowWidth * 0.7) / reelElement.offsetWidth\r\n\r\n        this.copiedElement.classList.add('zoomed')\r\n        this.copiedElement.style.left = absolutePosition.left + 'px'\r\n        this.copiedElement.style.top = absolutePosition.top + 'px'\r\n        this.copiedElement.style.height = reelElement.clientHeight + 'px'\r\n        this.copiedElement.style.width = reelElement.clientWidth + 'px'\r\n\r\n        this.currentClickListener = window.addEventListener('click', function(e) {\r\n            e.stopPropagation()\r\n            e.preventDefault()\r\n            window.removeEventListener('click', this)\r\n            self.unzoom()\r\n            return false\r\n        })\r\n    \r\n        document.getElementsByTagName('body')[0].appendChild(this.copiedElement)\r\n        this.setState({isZoom: true})\r\n        setTimeout(() => {\r\n            if (this.copiedElement.firstChild) {\r\n                this.copiedElement.firstChild.style.transform = `scale(${this.scaleFactor})`\r\n            }\r\n\r\n            this.copiedElement.style.transform = `\r\n                translate(\r\n                    calc((${windowWidth / 2}px - ${absolutePosition.left}px - ${scaledWidth / 2}px)),\r\n                    calc((${windowHeight / 2}px - ${absolutePosition.top}px - ${scaledHeight / 2}px))\r\n                )\r\n            `\r\n        }, 0)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <div onClick={this.zoomOrNot.bind(this)} className={\"zoomable-container\"} ref={this.containerRef}>\r\n                    <div className=\"zoomable-sub-container\">\r\n                        {this.props.children}\r\n                        <span className=\"zoomable-close-button\">\r\n                            {this.props.closeButton}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                { this.state.isZoom &&\r\n                <span className=\"zoomable-background\"/>\r\n                }\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Zoomable"]},"metadata":{},"sourceType":"module"}